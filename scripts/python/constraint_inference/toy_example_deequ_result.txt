["ComplianceConstraint(Compliance(complications contained in N,`complications` IS NULL OR `complications` IN ('N'),None,List(complications),None))", 'Failure', 'Value: 0.6666666666666666 does not meet the constraint requirement!']
['CompletenessConstraint(Completeness(complications,None,None))', 'Success', '']
['CompletenessConstraint(Completeness(ssn,None,None))', 'Success', '']
['UniquenessConstraint(Uniqueness(List(ssn),None,None))', 'Success', '']
['CompletenessConstraint(Completeness(diagnosis,None,None))', 'Failure', 'Value: 0.6666666666666666 does not meet the constraint requirement!']
['CompletenessConstraint(Completeness(admission_day,None,None))', 'Failure', 'Value: 0.6666666666666666 does not meet the constraint requirement!']
['ComplianceConstraint(Compliance(admission_day is non-negative,COALESCE(CAST(admission_day AS DECIMAL(20,10)), 0.0) >= 0,None,List(admission_day),None))', 'Success', '']
["ComplianceConstraint(Compliance(bloodtype contained in A pos,O pos,`bloodtype` IS NULL OR `bloodtype` IN ('A pos','O pos'),None,List(bloodtype),None))", 'Failure', 'Value: 0.6666666666666666 does not meet the constraint requirement!']
['CompletenessConstraint(Completeness(bloodtype,None,None))', 'Success', '']
['CompletenessConstraint(Completeness(cost,None,None))', 'Success', '']
['ComplianceConstraint(Compliance(cost is non-negative,COALESCE(CAST(cost AS DECIMAL(20,10)), 0.0) >= 0,None,List(cost),None))', 'Success', '']
['CompletenessConstraint(Completeness(insurance,None,None))', 'Success', '']
['CompletenessConstraint(Completeness(gender,None,None))', 'Failure', 'Value: 0.6666666666666666 does not meet the constraint requirement!']
['ComplianceConstraint(Compliance(gender is non-negative,COALESCE(CAST(gender AS DECIMAL(20,10)), 0.0) >= 0,None,List(gender),None))', 'Success', '']
['CompletenessConstraint(Completeness(discharge_day,None,None))', 'Success', '']
['ComplianceConstraint(Compliance(discharge_day is non-negative,COALESCE(CAST(discharge_day AS DECIMAL(20,10)), 0.0) >= 0,None,List(discharge_day),None))', 'Success', '']
['UniquenessConstraint(Uniqueness(List(discharge_day),None,None))', 'Success', '']
['CompletenessConstraint(Completeness(race,None,None))', 'Success', '']