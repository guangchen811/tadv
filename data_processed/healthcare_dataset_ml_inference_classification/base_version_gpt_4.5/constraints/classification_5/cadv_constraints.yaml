constraints:
  Age:
    code:
    - - '.hasMax(''Age'', lambda x: x <= 120)'
      - Valid
    - - '.hasMin(''Age'', lambda x: x >= 0)'
      - Valid
    - - .isComplete('Age')
      - Valid
    assumptions:
    - The 'Age' column should contain realistic age values (e.g., between 0 and 120).
    - The 'Age' column should not contain any null values.
  Billing Amount:
    code:
    - - .isComplete('Billing Amount')
      - Valid
    - - .isNonNegative('Billing Amount')
      - Invalid
    assumptions:
    - The 'Billing Amount' column should have non-negative numeric values.
    - The 'Billing Amount' column should not contain any null values.
  Blood Type:
    code:
    - - .isComplete('Blood Type')
      - Valid
    - - .isContainedIn('Blood Type', ['A+', 'A-', 'B+', 'B-', 'AB+', 'AB-', 'O+',
        'O-'])
      - Valid
    assumptions:
    - The 'Blood Type' column should only contain the values ['A+', 'A-', 'B+', 'B-',
      'AB+', 'AB-', 'O+', 'O-'].
    - The 'Blood Type' column should not contain any null values.
  Date of Admission:
    code:
    - - .isComplete('Date of Admission')
      - Valid
    - - .satisfies("to_date(`Date of Admission`) IS NOT NULL", 'Valid Date of Admission')
      - Valid
    assumptions:
    - The 'Date of Admission' column values should be valid dates.
    - The 'Date of Admission' column should not contain any null values.
  Discharge Date:
    code:
    - - .isComplete('Discharge Date')
      - Valid
    - - .satisfies("`Discharge Date` >= `Date of Admission`", 'Discharge Date is on
        or after Date of Admission')
      - Valid
    - - .satisfies("to_date(`Discharge Date`) IS NOT NULL", 'Valid Discharge Date')
      - Valid
    assumptions:
    - The 'Discharge Date' column values should be valid dates.
    - The 'Discharge Date' column should not contain any null values.
    - The 'Discharge Date' should be on or after the corresponding 'Date of Admission'.
  Medical Condition:
    code:
    - - .isComplete('Medical Condition')
      - Valid
    - - .isContainedIn('Medical Condition', ['Hypertension', 'Cancer', 'Obesity',
        'Arthritis', 'Diabetes', 'Asthma'])
      - Valid
    assumptions:
    - The 'Medical Condition' column should only contain the values ['Hypertension',
      'Cancer', 'Obesity', 'Arthritis', 'Diabetes', 'Asthma'].
    - The 'Medical Condition' column should not contain any null values.
  Test Results:
    code:
    - - .isComplete('Test Results')
      - Valid
    - - .isContainedIn('Test Results', ['Abnormal', 'Normal', 'Inconclusive'])
      - Valid
    assumptions:
    - The 'Test Results' column should only contain the values ['Abnormal', 'Normal',
      'Inconclusive'].
    - The 'Test Results' column should not contain any null values.
  id:
    code:
    - - .isComplete('id')
      - Valid
    - - .isUnique('id')
      - Valid
    assumptions:
    - The 'id' column should have unique values.
    - The 'id' column should not contain any null values.
