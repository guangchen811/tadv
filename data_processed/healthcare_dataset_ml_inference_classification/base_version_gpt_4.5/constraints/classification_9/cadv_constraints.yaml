constraints:
  Admission Type:
    code:
    - - .isComplete('Admission Type')
      - Valid
    - - .isContainedIn('Admission Type', ['Emergency', 'Urgent', 'Elective'])
      - Valid
    assumptions:
    - Admission Type should not be null
    - Admission Type should be one of ['Emergency', 'Urgent', 'Elective']
  Age:
    code:
    - - .isComplete('Age')
      - Valid
    - - .isPositive('Age')
      - Valid
    assumptions:
    - Age should be greater than 0
    - Age should not be null
  Billing Amount:
    code:
    - - .isComplete('Billing Amount')
      - Valid
    - - .isNonNegative('Billing Amount')
      - Invalid
    assumptions:
    - Billing Amount should be greater than or equal to 0
    - Billing Amount should not be null
  Blood Type:
    code:
    - - .isComplete('Blood Type')
      - Valid
    - - .isContainedIn('Blood Type', ['A+', 'O+', 'B+', 'AB+', 'A-', 'O-', 'B-', 'AB-'])
      - Valid
    assumptions:
    - Blood Type should not be null
    - Blood Type should be one of ['A+', 'O+', 'B+', 'AB+', 'A-', 'O-', 'B-', 'AB-']
  Date of Admission:
    code:
    - - .isComplete('Date of Admission')
      - Valid
    - - .satisfies("to_date(`Date of Admission`) <= to_date(`Discharge Date`)", 'Admission_before_or_equal_Discharge')
      - Valid
    - - .satisfies("to_date(`Date of Admission`) IS NOT NULL", 'valid_Date_of_Admission')
      - Valid
    assumptions:
    - Date of Admission should be a valid date in format recognizable by pandas.to_datetime
    - Date of Admission should not be null
    - Date of Admission should be earlier than or equal to Discharge Date
  Discharge Date:
    code:
    - - .isComplete('Discharge Date')
      - Valid
    - - .satisfies("to_date(`Discharge Date`) >= to_date(`Date of Admission`)", 'Discharge_after_or_equal_Admission')
      - Valid
    - - .satisfies("to_date(`Discharge Date`) IS NOT NULL", 'valid_Discharge_Date')
      - Valid
    assumptions:
    - Discharge Date should be a valid date in format recognizable by pandas.to_datetime
    - Discharge Date should not be null
    - Discharge Date should be later than or equal to Date of Admission
  Gender:
    code:
    - - .isComplete('Gender')
      - Valid
    - - .isContainedIn('Gender', ['Male', 'Female'])
      - Valid
    assumptions:
    - Gender should not be null
    - Gender should be one of ['Male', 'Female']
  Hospital:
    code:
    - - '.hasMinLength(''Hospital'', lambda x: x > 0)'
      - Valid
    - - .isComplete('Hospital')
      - Valid
    assumptions:
    - Hospital should not be null
    - Hospital should be a string
  Medical Condition:
    code:
    - - .isComplete('Medical Condition')
      - Valid
    - - .isContainedIn('Medical Condition', ['Hypertension', 'Cancer', 'Obesity',
        'Arthritis', 'Diabetes', 'Asthma'])
      - Valid
    assumptions:
    - Medical Condition should not be null
    - Medical Condition should be one of ['Hypertension', 'Cancer', 'Obesity', 'Arthritis',
      'Diabetes', 'Asthma']
  id:
    code:
    - - .isComplete('id')
      - Valid
    - - .isUnique('id')
      - Valid
    assumptions:
    - id should be unique
    - id should not be null
