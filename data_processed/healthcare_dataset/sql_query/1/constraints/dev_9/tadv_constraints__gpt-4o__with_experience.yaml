constraints:
  Age:
    code:
    - - '.hasMax(''Age'', lambda x: x <= 120)'
      - Valid
    - - '.hasMin(''Age'', lambda x: x >= 0)'
      - Valid
    - - .isComplete('Age')
      - Valid
    - - .satisfies('Age == CAST(Age AS INTEGER)', 'Age is integer')
      - Valid
    assumptions:
    - NOT NULL
    - 'MIN: 0'
    - 'MAX: 120'
    - IS INTEGER
  Medical Condition:
    code:
    - - .isComplete('Medical Condition')
      - Valid
    - - .isContainedIn('Medical Condition', ['Hypertension', 'Cancer', 'Obesity',
        'Arthritis', 'Diabetes', 'Asthma'])
      - Valid
    assumptions:
    - NOT NULL
    - 'IS IN: [''Hypertension'', ''Cancer'', ''Obesity'', ''Arthritis'', ''Diabetes'',
      ''Asthma'']'
  Name:
    code:
    - - .isComplete('Name')
      - Valid
    assumptions:
    - NOT NULL
  id:
    code:
    - - .isComplete('id')
      - Valid
    - - .isUnique('id')
      - Valid
    assumptions:
    - NOT NULL
    - UNIQUE
