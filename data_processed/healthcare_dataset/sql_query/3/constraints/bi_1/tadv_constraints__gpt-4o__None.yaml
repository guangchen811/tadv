constraints:
  Admission Type:
    code:
    - - .isContainedIn('Admission Type', ['Emergency', 'Urgent', 'Elective'])
      - Valid
    assumptions:
    - 'should be one of the predefined categories: Emergency, Urgent, Elective'
  Age:
    code:
    - - .isNonNegative('Age')
      - Valid
    assumptions:
    - should be a non-negative integer
  Billing Amount:
    code:
    - - .isNonNegative('Billing Amount')
      - Invalid
    assumptions:
    - should be a non-negative number
  Gender:
    code:
    - - .isContainedIn('Gender', ['Male', 'Female'])
      - Valid
    assumptions:
    - should be either 'Male' or 'Female'
  Insurance Provider:
    code:
    - - .isContainedIn('Insurance Provider', ['Aetna', 'Blue Cross', 'UnitedHealthcare',
        'Cigna', 'Medicare'])
      - Valid
    assumptions:
    - 'should be one of the predefined categories: Aetna, Blue Cross, UnitedHealthcare,
      Cigna, Medicare'
  Medical Condition:
    code:
    - - .isContainedIn('Medical Condition', ['Hypertension', 'Cancer', 'Obesity',
        'Arthritis', 'Diabetes', 'Asthma'])
      - Valid
    assumptions:
    - 'should be one of the predefined categories: Hypertension, Cancer, Obesity,
      Arthritis, Diabetes, Asthma'
  Medication:
    code:
    - - .isContainedIn('Medication', ['Aspirin', 'Paracetamol', 'Ibuprofen', 'Penicillin',
        'Lipitor'])
      - Valid
    assumptions:
    - 'should be one of the predefined categories: Aspirin, Paracetamol, Ibuprofen,
      Penicillin, Lipitor'
  Name:
    code:
    - - .isComplete('Name')
      - Valid
    assumptions:
    - should not be null or empty
  Test Results:
    code:
    - - .isContainedIn('Test Results', ['Abnormal', 'Normal', 'Inconclusive'])
      - Valid
    assumptions:
    - 'should be one of the predefined categories: Abnormal, Normal, Inconclusive'
  id:
    code:
    - - .isUnique('id')
      - Valid
    assumptions:
    - should be unique across the dataset
