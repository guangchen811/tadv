constraints:
  Admission Type:
    code:
    - - .isComplete('Admission Type')
      - Valid
    - - .isContainedIn('Admission Type', ['Urgent', 'Elective', 'Emergency'])
      - Valid
    assumptions:
    - Each 'Admission Type' should be complete and included in the set ['Urgent',
      'Elective', 'Emergency'] to ensure valid admission types.
  Age:
    code:
    - - .isComplete('Age')
      - Valid
    - - .isNonNegative('Age')
      - Valid
    assumptions:
    - Each 'Age' should be complete and should be a non-negative integer, as age cannot
      be negative.
  Billing Amount:
    code:
    - - .isComplete('Billing Amount')
      - Valid
    - - .isNonNegative('Billing Amount')
      - Invalid
    assumptions:
    - Each 'Billing Amount' should be complete and a non-negative number, as billing
      amounts cannot be negative.
  Gender:
    code:
    - - .isComplete('Gender')
      - Valid
    - - .isContainedIn('Gender', ['Male', 'Female'])
      - Valid
    assumptions:
    - Each 'Gender' should be complete and must be either 'Male' or 'Female' to align
      with the dataset's binary gender classification.
  Insurance Provider:
    code:
    - - .isComplete('Insurance Provider')
      - Valid
    - - .isContainedIn('Insurance Provider', ['Cigna', 'Medicare', 'UnitedHealthcare',
        'Blue Cross', 'Aetna'])
      - Valid
    assumptions:
    - Each 'Insurance Provider' should be complete and included in the set ['Cigna',
      'Medicare', 'UnitedHealthcare', 'Blue Cross', 'Aetna'] to ensure known insurance
      providers.
  Medical Condition:
    code:
    - - .isComplete('Medical Condition')
      - Valid
    - - .isContainedIn('Medical Condition', ['Diabetes', 'Asthma', 'Obesity', 'Hypertension',
        'Arthritis', 'Cancer'])
      - Valid
    assumptions:
    - Each 'Medical Condition' should be complete and included in the set ['Diabetes',
      'Asthma', 'Obesity', 'Hypertension', 'Arthritis', 'Cancer'] for consistency
      with known conditions.
  Medication:
    code:
    - - .isComplete('Medication')
      - Valid
    - - .isContainedIn('Medication', ['Aspirin', 'Ibuprofen', 'Lipitor', 'Paracetamol',
        'Penicillin'])
      - Valid
    assumptions:
    - Each 'Medication' should be complete and included in the set ['Aspirin', 'Ibuprofen',
      'Lipitor', 'Paracetamol', 'Penicillin'] for consistency with known medications.
  Name:
    code:
    - - .isComplete('Name')
      - Valid
    assumptions:
    - Each 'Name' should be complete to ensure patient records are identifiable by
      name.
  Test Results:
    code:
    - - .isComplete('Test Results')
      - Valid
    - - .isContainedIn('Test Results', ['Abnormal', 'Normal', 'Inconclusive'])
      - Valid
    assumptions:
    - Each 'Test Results' should be complete and included in the set ['Abnormal',
      'Normal', 'Inconclusive'] for consistency with known test result statuses.
  id:
    code:
    - - .isComplete('id')
      - Valid
    - - .isUnique('id')
      - Valid
    assumptions:
    - Each 'id' should be complete and unique to ensure all patients are uniquely
      identifiable.
