results:
  Admission Type:
    code:
    - - .isComplete('Admission Type')
      - Passed
    - - .isContainedIn('Admission Type', ['Emergency', 'Urgent', 'Elective'])
      - Passed
  Age:
    code:
    - - '.hasMin(''Age'', lambda x: x >= 0)'
      - Passed
    - - .isComplete('Age')
      - Passed
    - - .isNonNegative('Age')
      - Passed
  Billing Amount:
    code:
    - - .isComplete('Billing Amount')
      - Passed
  Gender:
    code:
    - - .isComplete('Gender')
      - Passed
    - - .isContainedIn('Gender', ['Male', 'Female'])
      - Passed
  Insurance Provider:
    code:
    - - .isComplete('Insurance Provider')
      - Passed
    - - .isContainedIn('Insurance Provider', ['Aetna', 'Blue Cross', 'UnitedHealthcare',
        'Cigna', 'Medicare'])
      - Passed
  Medical Condition:
    code:
    - - .isComplete('Medical Condition')
      - Passed
    - - .isContainedIn('Medical Condition', ['Hypertension', 'Cancer', 'Obesity',
        'Arthritis', 'Diabetes', 'Asthma'])
      - Passed
  Medication:
    code:
    - - .isComplete('Medication')
      - Passed
    - - .isContainedIn('Medication', ['Aspirin', 'Paracetamol', 'Ibuprofen', 'Penicillin',
        'Lipitor'])
      - Passed
  Name:
    code:
    - - .isComplete('Name')
      - Passed
  Test Results:
    code:
    - - .isComplete('Test Results')
      - Passed
    - - .isContainedIn('Test Results', ['Abnormal', 'Normal', 'Inconclusive'])
      - Passed
  id:
    code:
    - - .isUnique('id')
      - Passed
