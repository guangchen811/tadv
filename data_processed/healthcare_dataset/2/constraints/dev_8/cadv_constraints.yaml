constraints:
  Age:
    code:
    - - '.hasMin(''Age'', lambda x: x >= 0)'
      - Valid
    - - .isComplete('Age')
      - Valid
    - - .isNonNegative('Age')
      - Valid
    assumptions:
    - The column 'Age' should not be NULL.
    - The column 'Age' should have a minimum value of 0.
    - The column 'Age' should be non-negative.
  Medical Condition:
    code:
    - - .isComplete('Medical Condition')
      - Valid
    - - .isContainedIn('Medical Condition', ['Hypertension', 'Cancer', 'Obesity',
        'Arthritis', 'Diabetes', 'Asthma'])
      - Valid
    assumptions:
    - The column 'Medical Condition' should not be NULL.
    - 'The column ''Medical Condition'' should have values within the range: [''Hypertension'',
      ''Cancer'', ''Obesity'', ''Arthritis'', ''Diabetes'', ''Asthma''].'
    - 'The column ''Medical Condition'' should suggest an IS IN constraint for most
      value: [''Hypertension'', ''Cancer'', ''Obesity'', ''Arthritis'', ''Diabetes'',
      ''Asthma''].'
  Name:
    code:
    - - .isComplete('Name')
      - Valid
    assumptions:
    - The column 'Name' should not be NULL.
  id:
    code:
    - - .isUnique('id')
      - Valid
    assumptions:
    - The column 'id' should have unique values.
