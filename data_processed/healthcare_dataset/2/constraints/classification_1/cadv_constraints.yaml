constraints:
  Admission Type:
    code:
    - - .isComplete('Admission Type')
      - Valid
    - - .isContainedIn('Admission Type', ['Emergency', 'Urgent', 'Elective'])
      - Valid
    assumptions:
    - Admission Type should have values within ['Emergency', 'Urgent', 'Elective'].
    - Admission Type should not be null.
  Age:
    code:
    - - '.hasMin(''Age'', lambda x: x >= 0)'
      - Valid
    - - .isNonNegative('Age')
      - Valid
    assumptions:
    - Age should be a non-negative integer.
    - Age should have a minimum value of 0.
  Billing Amount:
    code:
    - - .isComplete('Billing Amount')
      - Valid
    - - .isNonNegative('Billing Amount')
      - Invalid
    assumptions:
    - Billing Amount should be a non-negative fractional number.
    - Billing Amount should not be null.
  Blood Type:
    code:
    - - .isComplete('Blood Type')
      - Valid
    - - .isContainedIn('Blood Type', ['A+', 'O+', 'B+', 'AB+', 'A-', 'O-', 'B-', 'AB-'])
      - Valid
    assumptions:
    - Blood Type should have values within ['A+', 'O+', 'B+', 'AB+', 'A-', 'O-', 'B-',
      'AB-'].
    - Blood Type should not be null.
  Gender:
    code:
    - - .isComplete('Gender')
      - Valid
    - - .isContainedIn('Gender', ['Male', 'Female'])
      - Valid
    assumptions:
    - Gender should have values within ['Male', 'Female'].
    - Gender should not be null.
  Insurance Provider:
    code:
    - - .isComplete('Insurance Provider')
      - Valid
    - - .isContainedIn('Insurance Provider', ['Aetna', 'Blue Cross', 'UnitedHealthcare',
        'Cigna', 'Medicare'])
      - Valid
    assumptions:
    - Insurance Provider should have values within ['Aetna', 'Blue Cross', 'UnitedHealthcare',
      'Cigna', 'Medicare'].
    - Insurance Provider should not be null.
  Medical Condition:
    code:
    - - .isComplete('Medical Condition')
      - Valid
    - - .isContainedIn('Medical Condition', ['Hypertension', 'Cancer', 'Obesity',
        'Arthritis', 'Diabetes', 'Asthma'])
      - Valid
    assumptions:
    - Medical Condition should have values within ['Hypertension', 'Cancer', 'Obesity',
      'Arthritis', 'Diabetes', 'Asthma'].
    - Medical Condition should not be null.
  Medication:
    code:
    - - .isComplete('Medication')
      - Valid
    - - .isContainedIn('Medication', ['Aspirin', 'Paracetamol', 'Ibuprofen', 'Penicillin',
        'Lipitor'])
      - Valid
    assumptions:
    - Medication should have values within ['Aspirin', 'Paracetamol', 'Ibuprofen',
      'Penicillin', 'Lipitor'].
    - Medication should not be null.
  Test Results:
    code:
    - - .isComplete('Test Results')
      - Valid
    - - .isContainedIn('Test Results', ['Abnormal', 'Normal', 'Inconclusive'])
      - Valid
    assumptions:
    - Test Results should have values within ['Abnormal', 'Normal', 'Inconclusive'].
    - Test Results should not be null.
  id:
    code:
    - - .isComplete('id')
      - Valid
    - - .isUnique('id')
      - Valid
    assumptions:
    - id should be a unique integer.
    - id should not be null.
