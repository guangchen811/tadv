constraints:
  Admission Type:
    code:
    - - .isContainedIn('Admission Type', ['Emergency', 'Urgent', 'Elective'])
      - Valid
    assumptions:
    - Admission Type should only contain values 'Emergency', 'Urgent', 'Elective'.
  Age:
    code:
    - - '.hasMax(''Age'', lambda x: x <= 100)'
      - Valid
    - - '.hasMin(''Age'', lambda x: x > 0)'
      - Valid
    - - .satisfies('Age % 1 = 0', 'Age_is_integer')
      - Valid
    assumptions:
    - Age values must be greater than 0.
    - Age values must be less than or equal to 100.
    - Age should be non-negative integer.
  Billing Amount:
    code:
    - - '.hasMax(''Billing Amount'', lambda x: x < 50000)'
      - Invalid
    - - .isNonNegative('Billing Amount')
      - Invalid
    assumptions:
    - Billing Amount should be less than 50000.
    - Billing Amount should be non-negative.
  Blood Type:
    code:
    - - .isComplete('Blood Type')
      - Valid
    - - .isContainedIn('Blood Type', ['A+', 'A-', 'B+', 'B-', 'AB+', 'AB-', 'O+',
        'O-', 'A', 'B', 'C', 'D', 'Rh-null', 'Rare'])
      - Valid
    assumptions:
    - Blood Type should contain values in ['A+', 'A-', 'B+', 'B-', 'AB+', 'AB-', 'O+',
      'O-', 'A', 'B', 'C', 'D', 'Rh-null', 'Rare'].
    - Blood Type column should not contain null values.
  Gender:
    code:
    - - .isContainedIn('Gender', ['Male', 'Female'])
      - Valid
    assumptions:
    - Gender should only contain values 'Male', 'Female'.
  Medication:
    code:
    - - .isComplete('Medication')
      - Valid
    - - .isContainedIn('Medication', ['Aspirin', 'Paracetamol', 'Ibuprofen', 'Penicillin',
        'Lipitor'])
      - Valid
    assumptions:
    - Medication should only contain values 'Aspirin', 'Paracetamol', 'Ibuprofen',
      'Penicillin', 'Lipitor'.
    - Medication column should not contain null values.
  id:
    code:
    - - .isComplete('id')
      - Valid
    - - .isUnique('id')
      - Valid
    assumptions:
    - id column should contain unique values.
    - id column should not contain null values.
