constraints:
  Age:
    code:
    - - .isComplete('Age')
      - Valid
    - - .isNonNegative('Age')
      - Valid
    assumptions:
    - Age should be complete, with no missing values.
    - Age should be a non-negative integer.
  Gender:
    code:
    - - .isComplete('Gender')
      - Valid
    - - .isContainedIn('Gender', ['Male', 'Female'])
      - Valid
    assumptions:
    - Gender should be complete, with no missing values.
    - Gender should be one of 'Male' or 'Female'.
  admission_date:
    code:
    - - .isComplete('admission_date')
      - Invalid
    - - .satisfies('admission_date > 0', 'Valid admission_date conversion')
      - Invalid
    assumptions:
    - Admission date should be complete, with no missing values.
    - Admission date should be convertible to a valid datetime format.
  billing_amount:
    code:
    - - .isComplete('billing_amount')
      - Invalid
    - - .isNonNegative('billing_amount')
      - Invalid
    assumptions:
    - Billing amount should be complete, with no missing values.
    - Billing amount should be a positive or zero fractional value.
  id:
    code:
    - - .isComplete('id')
      - Valid
    - - .isNonNegative('id')
      - Valid
    - - .isUnique('id')
      - Valid
    assumptions:
    - ID should be complete, with no missing values.
    - ID should be unique for each record.
    - ID should be a non-negative integer.
  medical_condition:
    code:
    - - .isComplete('medical_condition')
      - Invalid
    - - .isContainedIn('medical_condition', ['Diabetes', 'Asthma', 'Obesity', 'Hypertension',
        'Arthritis', 'Cancer'])
      - Invalid
    assumptions:
    - Medical condition should be complete, with no missing values.
    - 'Medical condition should be one of the predefined categories: ''Diabetes'',
      ''Asthma'', ''Obesity'', ''Hypertension'', ''Arthritis'', ''Cancer''.'
