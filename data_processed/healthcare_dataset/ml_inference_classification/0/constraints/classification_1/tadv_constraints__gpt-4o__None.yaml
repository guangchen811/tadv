constraints:
  Admission Type:
    code: []
    assumptions: []
  Age:
    code:
    - - .isLessThanOrEqualTo('Age', 100)
      - Invalid
    - - .isPositive('Age')
      - Valid
    assumptions:
    - All values should be greater than 0
    - All values should be less than or equal to 100
  Billing Amount:
    code:
    - - '.hasCompleteness(''Billing Amount'', lambda x: x >= 0.95)'
      - Valid
    - - '.hasMax(''Billing Amount'', lambda x: x < 50000)'
      - Invalid
    assumptions:
    - At least 95 percent of the values should be less than 50000
  Blood Type:
    code:
    - - .isContainedIn('Blood Type', ['A', 'B', 'C', 'D', 'A+', 'A-', 'B+', 'B-',
        'AB+', 'AB-', 'O+', 'O-', 'Rh-null', 'Rare'])
      - Valid
    assumptions:
    - 'Values should match one of the following categories: A, B, C, D, A+, A-, B+,
      B-, AB+, AB-, O+, O-, Rh-null, Rare'
  Gender:
    code: []
    assumptions: []
  Medication:
    code: []
    assumptions: []
  Test Results:
    code:
    - - .isContainedIn('Test Results', list(expected_classes))
      - Invalid
    assumptions:
    - Values should match expected classes from the model's classifier
  id:
    code:
    - - .isUnique('id')
      - Valid
    assumptions:
    - Values should be unique
