constraints:
  Billing Amount:
    code:
    - - '.hasMean(''Billing Amount'', lambda x: x > 0)'
      - Valid
    - - '.hasStandardDeviation(''Billing Amount'', lambda x: x > 0)'
      - Valid
    - - .isComplete('Billing Amount')
      - Valid
    - - .isNonNegative('Billing Amount')
      - Invalid
    assumptions:
    - The column 'Billing Amount' should not contain null values as completeness is
      1.0.
    - The column 'Billing Amount' should be non-negative as it is a numerical value
      representing an amount.
    - The column 'Billing Amount' should have a mean and standard deviation constraint
      to ensure expected distribution.
  Insurance Provider:
    code:
    - - .isComplete('Insurance Provider')
      - Valid
    - - .isContainedIn('Insurance Provider', ['Aetna', 'Blue Cross', 'UnitedHealthcare',
        'Cigna', 'Medicare'])
      - Valid
    assumptions:
    - The column 'Insurance Provider' should not contain null values as completeness
      is 1.0.
    - The column 'Insurance Provider' should contain values within ['Aetna', 'Blue
      Cross', 'UnitedHealthcare', 'Cigna', 'Medicare'] based on the observed categorical
      range.
  Medical Condition:
    code:
    - - .isComplete('Medical Condition')
      - Valid
    - - .isContainedIn('Medical Condition', ['Hypertension', 'Cancer', 'Obesity',
        'Arthritis', 'Diabetes', 'Asthma'])
      - Valid
    assumptions:
    - The column 'Medical Condition' should not contain null values as completeness
      is 1.0.
    - The column 'Medical Condition' should contain values within ['Hypertension',
      'Cancer', 'Obesity', 'Arthritis', 'Diabetes', 'Asthma'] based on the observed
      categorical range.
  Name:
    code:
    - - .isComplete('Name')
      - Valid
    assumptions:
    - The column 'Name' should not contain null values as completeness is 1.0.
