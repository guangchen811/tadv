constraints:
  Admission Type:
    code:
    - - .isComplete('Admission Type')
      - Valid
    - - .isContainedIn('Admission Type', ['Urgent', 'Elective', 'Emergency'])
      - Valid
    assumptions:
    - Admission Type should be a complete column with no missing values.
    - 'Admission Type is expected to contain one of the predefined categories: [''Urgent'',
      ''Elective'', ''Emergency''].'
  Age:
    code:
    - - .isComplete('Age')
      - Valid
    - - .isNonNegative('Age')
      - Valid
    assumptions:
    - Age should be a complete column with no missing values.
    - Age should be a non-negative integer, as it is a numeric feature used in modeling.
  Billing Amount:
    code:
    - - .isComplete('Billing Amount')
      - Valid
    - - .satisfies('Billing Amount >= 0', 'Billing Amount is non-negative')
      - Invalid
    assumptions:
    - Billing Amount should be a complete column with no missing values.
    - Billing Amount is expected to be a numeric value, as it is used for regression
      tasks.
  Blood Type:
    code:
    - - .isComplete('Blood Type')
      - Valid
    - - .isContainedIn('Blood Type', ['A+', 'O+', 'B+', 'AB+', 'A-', 'O-', 'B-', 'AB-'])
      - Valid
    assumptions:
    - Blood Type should be a complete column with no missing values.
    - 'Blood Type is expected to contain one of the predefined categories: [''A+'',
      ''O+'', ''B+'', ''AB+'', ''A-'', ''O-'', ''B-'', ''AB-''].'
  Gender:
    code:
    - - .isComplete('Gender')
      - Valid
    - - .isContainedIn('Gender', ['Male', 'Female'])
      - Valid
    assumptions:
    - Gender should be a complete column with no missing values.
    - 'Gender is expected to contain one of the predefined categories: [''Male'',
      ''Female''].'
  Hospital:
    code:
    - - .isComplete('Hospital')
      - Valid
    assumptions:
    - Hospital should be a complete column with no missing values.
    - Hospital values are expected to be consistent as they are used for categorical
      encoding.
  Insurance Provider:
    code:
    - - .isComplete('Insurance Provider')
      - Valid
    - - .isContainedIn('Insurance Provider', ['Aetna', 'Blue Cross', 'UnitedHealthcare',
        'Cigna', 'Medicare'])
      - Valid
    assumptions:
    - Insurance Provider should be a complete column with no missing values.
    - 'Insurance Provider is expected to contain one of the predefined categories:
      [''Aetna'', ''Blue Cross'', ''UnitedHealthcare'', ''Cigna'', ''Medicare''].'
  Medical Condition:
    code:
    - - .isComplete('Medical Condition')
      - Valid
    - - .isContainedIn('Medical Condition', ['Diabetes', 'Asthma', 'Obesity', 'Hypertension',
        'Arthritis', 'Cancer'])
      - Valid
    assumptions:
    - Medical Condition should be a complete column with no missing values.
    - 'Medical Condition is expected to contain one of the predefined categories:
      [''Diabetes'', ''Asthma'', ''Obesity'', ''Hypertension'', ''Arthritis'', ''Cancer''].'
  Medication:
    code:
    - - .isComplete('Medication')
      - Valid
    - - .isContainedIn('Medication', ['Aspirin', 'Ibuprofen', 'Lipitor', 'Paracetamol',
        'Penicillin'])
      - Valid
    assumptions:
    - Medication should be a complete column with no missing values.
    - 'Medication is expected to contain one of the predefined categories: [''Aspirin'',
      ''Ibuprofen'', ''Lipitor'', ''Paracetamol'', ''Penicillin''].'
  Room Number:
    code:
    - - .isComplete('Room Number')
      - Valid
    - - .isNonNegative('Room Number')
      - Invalid
    assumptions:
    - Room Number should be a complete column with no missing values.
    - Room Number should be a non-negative integer.
