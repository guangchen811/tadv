constraints:
  Admission Type:
    code:
    - - .isComplete('Admission Type')
      - Valid
    - - .isContainedIn('Admission Type', ['Emergency', 'Urgent', 'Elective'])
      - Valid
    assumptions:
    - The column 'Admission Type' should be complete (NOT NULL).
    - The column 'Admission Type' should have values in ['Emergency', 'Urgent', 'Elective'].
  Age:
    code:
    - - .isComplete('Age')
      - Valid
    - - '.isGreaterThan(''Age'', None, lambda x: x > 0)'
      - Invalid
    - - .isNonNegative('Age')
      - Valid
    assumptions:
    - The column 'Age' should be complete (NOT NULL).
    - The column 'Age' should be greater than 0 to avoid division by zero.
    - The column 'Age' should be non-negative.
  Billing Amount:
    code:
    - - .isComplete('billing_amount')
      - Invalid
    - - .isNonNegative('billing_amount')
      - Invalid
    assumptions:
    - The column 'Billing Amount' should be complete (NOT NULL).
    - The column 'Billing Amount' should be non-negative.
  Blood Type:
    code:
    - - .isComplete('Blood Type')
      - Valid
    - - .isContainedIn('Blood Type', ['A+', 'O+', 'B+', 'AB+', 'A-', 'O-', 'B-', 'AB-'])
      - Valid
    assumptions:
    - The column 'Blood Type' should be complete (NOT NULL).
    - The column 'Blood Type' should have values in ['A+', 'O+', 'B+', 'AB+', 'A-',
      'O-', 'B-', 'AB-'].
  Gender:
    code:
    - - .isComplete('Gender')
      - Valid
    - - .isContainedIn('Gender', ['Male', 'Female'])
      - Valid
    assumptions:
    - The column 'Gender' should be complete (NOT NULL).
    - The column 'Gender' should have values in ['Male', 'Female'].
  Hospital:
    code:
    - - .isComplete('Hospital')
      - Valid
    assumptions:
    - The column 'Hospital' should be complete (NOT NULL).
  Insurance Provider:
    code:
    - - .isComplete('Insurance Provider')
      - Valid
    - - .isContainedIn('Insurance Provider', ['Aetna', 'Blue Cross', 'UnitedHealthcare',
        'Cigna', 'Medicare'])
      - Valid
    assumptions:
    - The column 'Insurance Provider' should be complete (NOT NULL).
    - The column 'Insurance Provider' should have values in ['Aetna', 'Blue Cross',
      'UnitedHealthcare', 'Cigna', 'Medicare'].
  Medical Condition:
    code:
    - - .isComplete('Medical Condition')
      - Valid
    - - .isContainedIn('Medical Condition', ['Hypertension', 'Cancer', 'Obesity',
        'Arthritis', 'Diabetes', 'Asthma'])
      - Valid
    assumptions:
    - The column 'Medical Condition' should be complete (NOT NULL).
    - The column 'Medical Condition' should have values in ['Hypertension', 'Cancer',
      'Obesity', 'Arthritis', 'Diabetes', 'Asthma'].
  Medication:
    code:
    - - .isComplete('Medication')
      - Valid
    - - .isContainedIn('Medication', ['Aspirin', 'Paracetamol', 'Ibuprofen', 'Penicillin',
        'Lipitor'])
      - Valid
    assumptions:
    - The column 'Medication' should be complete (NOT NULL).
    - The column 'Medication' should have values in ['Aspirin', 'Paracetamol', 'Ibuprofen',
      'Penicillin', 'Lipitor'].
  Room Number:
    code:
    - - .isComplete('Room Number')
      - Valid
    - - .isNonNegative('Room Number')
      - Invalid
    assumptions:
    - The column 'Room Number' should be complete (NOT NULL).
    - The column 'Room Number' should be non-negative.
  id:
    code:
    - - .isComplete('id')
      - Valid
    - - .isUnique('id')
      - Valid
    assumptions:
    - The column 'id' should be complete (NOT NULL).
    - The column 'id' should have unique values.
