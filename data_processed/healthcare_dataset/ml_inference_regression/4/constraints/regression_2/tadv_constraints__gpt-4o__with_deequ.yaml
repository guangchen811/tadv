constraints:
  admission_dt:
    code:
    - - .isComplete('admission_dt')
      - Invalid
    - - '.satisfies(''admission_dt IS NOT NULL'', ''admission_dt_validity'', lambda
        x: x == 1.0)'
      - Invalid
    assumptions:
    - The column 'admission_dt' should be correctly parsed as datetime objects, meaning
      all values should be valid dates.
    - The column 'admission_dt' should be complete, meaning there should be no missing
      values.
  billing_amount:
    code:
    - - .isComplete('billing_amount')
      - Invalid
    assumptions:
    - The column 'billing_amount' should be complete, meaning there should be no missing
      values.
  discharge_dt:
    code:
    - - .isComplete('discharge_dt')
      - Invalid
    - - '.satisfies(''discharge_dt IS NOT NULL'', ''discharge_dt_validity'', lambda
        x: x == 1.0)'
      - Invalid
    assumptions:
    - The column 'discharge_dt' should be correctly parsed as datetime objects, meaning
      all values should be valid dates.
    - The column 'discharge_dt' should be complete, meaning there should be no missing
      values.
  id:
    code:
    - - .isComplete('id')
      - Valid
    - - .isNonNegative('id')
      - Valid
    - - .isUnique('id')
      - Valid
    assumptions:
    - The column 'id' should be complete, meaning there should be no missing values.
    - The column 'id' should contain unique values to serve as a proper identifier
      for each record.
    - The column 'id' should contain non-negative integer values.
