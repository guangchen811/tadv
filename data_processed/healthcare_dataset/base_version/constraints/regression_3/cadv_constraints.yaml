constraints:
  Admission Type:
    code:
    - - .isComplete('Admission Type')
      - Valid
    - - .isContainedIn('Admission Type', ['Emergency', 'Urgent', 'Elective'])
      - Valid
    assumptions:
    - The column 'Admission Type' should not contain any missing values.
    - Values in 'Admission Type' should be treated as categorical.
    - 'Expected categories are: ''Emergency'', ''Urgent'', ''Elective''.'
  Age:
    code:
    - - .isComplete('Age')
      - Valid
    - - .satisfies('Age IS NOT NULL', 'Age should be numeric')
      - Valid
    assumptions:
    - The column 'Age' should not contain any missing values.
    - Values in 'Age' should be numeric.
  Blood Type:
    code:
    - - .isComplete('Blood Type')
      - Valid
    - - .isContainedIn('Blood Type', ['A+', 'O+', 'B+', 'AB+', 'A-', 'O-', 'B-', 'AB-'])
      - Valid
    assumptions:
    - The column 'Blood Type' should not contain any missing values.
    - Values in 'Blood Type' should be treated as categorical.
    - 'Expected categories are: ''A+'', ''O+'', ''B+'', ''AB+'', ''A-'', ''O-'', ''B-'',
      ''AB-''.'
  Gender:
    code:
    - - .isComplete('Gender')
      - Valid
    - - .isContainedIn('Gender', ['Male', 'Female'])
      - Valid
    assumptions:
    - The column 'Gender' should not contain any missing values.
    - Values in 'Gender' should be treated as categorical.
    - 'Expected categories are: ''Male'', ''Female''.'
  Hospital:
    code:
    - - .isComplete('Hospital')
      - Valid
    assumptions:
    - The column 'Hospital' should not contain any missing values.
    - Values in 'Hospital' should be treated as categorical.
  Insurance Provider:
    code:
    - - .isComplete('Insurance Provider')
      - Valid
    - - .isContainedIn('Insurance Provider', ['Aetna', 'Blue Cross', 'UnitedHealthcare',
        'Cigna', 'Medicare'])
      - Valid
    assumptions:
    - The column 'Insurance Provider' should not contain any missing values.
    - Values in 'Insurance Provider' should be treated as categorical.
    - 'Expected categories are: ''Aetna'', ''Blue Cross'', ''UnitedHealthcare'', ''Cigna'',
      ''Medicare''.'
  Medical Condition:
    code:
    - - .isComplete('Medical Condition')
      - Valid
    - - .isContainedIn('Medical Condition', ['Hypertension', 'Cancer', 'Obesity',
        'Arthritis', 'Diabetes', 'Asthma'])
      - Valid
    assumptions:
    - The column 'Medical Condition' should not contain any missing values.
    - Values in 'Medical Condition' should be treated as categorical.
    - 'Expected categories are: ''Hypertension'', ''Cancer'', ''Obesity'', ''Arthritis'',
      ''Diabetes'', ''Asthma''.'
  Medication:
    code:
    - - .isComplete('Medication')
      - Valid
    - - .isContainedIn('Medication', ['Aspirin', 'Paracetamol', 'Ibuprofen', 'Penicillin',
        'Lipitor'])
      - Valid
    assumptions:
    - The column 'Medication' should not contain any missing values.
    - Values in 'Medication' should be treated as categorical.
    - 'Expected categories are: ''Aspirin'', ''Paracetamol'', ''Ibuprofen'', ''Penicillin'',
      ''Lipitor''.'
  Room Number:
    code:
    - - .isComplete('Room Number')
      - Valid
    - - .satisfies('Room Number IS NOT NULL', 'Room Number should be numeric')
      - Invalid
    assumptions:
    - The column 'Room Number' should not contain any missing values.
    - Values in 'Room Number' should be numeric.
  billing_amount:
    code:
    - - .isComplete('billing_amount')
      - Invalid
    - - .satisfies('billing_amount IS NOT NULL', 'Billing Amount should be numeric')
      - Invalid
    assumptions:
    - The column 'billing_amount' should not contain any missing values.
    - Values in 'billing_amount' should be numeric.
  id:
    code:
    - - .isComplete('id')
      - Valid
    - - .isUnique('id')
      - Valid
    assumptions:
    - The column 'id' should not contain any missing values.
    - Values in 'id' should be unique.
