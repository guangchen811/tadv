constraints:
  Date of Admission:
    code:
    - - .satisfies('admission_dt IS NOT NULL', 'Date of Admission should be convertible
        to a valid datetime.')
      - Invalid
    - - .satisfies('discharge_dt >= admission_dt', 'Discharge Date should be on or
        after Date of Admission.')
      - Invalid
    assumptions:
    - Date of Admission should be convertible to a valid datetime.
    - Discharge Date should be on or after Date of Admission.
  Discharge Date:
    code:
    - - .satisfies('discharge_dt >= admission_dt', 'Discharge Date should be on or
        after Date of Admission.')
      - Invalid
    - - .satisfies('discharge_dt IS NOT NULL', 'Discharge Date should be convertible
        to a valid datetime.')
      - Invalid
    assumptions:
    - Discharge Date should be convertible to a valid datetime.
    - Discharge Date should be on or after Date of Admission.
  Insurance Provider:
    code:
    - - .isComplete('Insurance Provider')
      - Valid
    assumptions:
    - Insurance Provider is expected to have no missing values.
  Room Number:
    code: []
    assumptions:
    - Room Number is expected to be present but is not used in the downstream task.
  Test Results:
    code:
    - - .isComplete('Test Results')
      - Valid
    - - .isContainedIn('Test Results', ['Abnormal', 'Normal', 'Inconclusive'])
      - Valid
    assumptions:
    - Test Results should be complete with no missing values.
    - 'Test Results should only contain categories: Abnormal, Normal, Inconclusive.'
  id:
    code:
    - - .isComplete('id')
      - Valid
    - - .isUnique('id')
      - Valid
    assumptions:
    - id should be unique for each entry.
    - id should not have missing values.
