constraints:
  cb_person_cred_hist_length:
    code:
    - - .isComplete('cb_person_cred_hist_length')
      - Valid
    - - .isNonNegative('cb_person_cred_hist_length')
      - Valid
    assumptions:
    - The 'cb_person_cred_hist_length' column should be complete, with no missing
      values.
    - The 'cb_person_cred_hist_length' values should be non-negative integers.
    - The 'cb_person_cred_hist_length' should represent realistic credit history lengths
      in years.
  cb_person_default_on_file:
    code:
    - - .isComplete('cb_person_default_on_file')
      - Valid
    - - .isContainedIn('cb_person_default_on_file', ['Y', 'N'])
      - Valid
    assumptions:
    - The 'cb_person_default_on_file' column should be complete, with no missing values.
    - The 'cb_person_default_on_file' should only contain values 'Y' and 'N'.
  id:
    code:
    - - .isComplete('id')
      - Valid
    - - .isNonNegative('id')
      - Valid
    - - .isUnique('id')
      - Valid
    assumptions:
    - The 'id' column should be complete, with no missing values.
    - The 'id' values should be unique across all records.
    - The 'id' should be non-negative integers.
  loan_amnt:
    code:
    - - .isComplete('loan_amnt')
      - Valid
    - - .isNonNegative('loan_amnt')
      - Valid
    assumptions:
    - The 'loan_amnt' column should be complete, with no missing values.
    - The 'loan_amnt' values should be non-negative integers.
    - The 'loan_amnt' should be within a realistic range of loan amounts typically
      requested.
  loan_int_rate:
    code:
    - - '.hasMax(''loan_int_rate'', lambda x: x <= 0.30)'
      - Invalid
    - - .isComplete('loan_int_rate')
      - Valid
    - - .isNonNegative('loan_int_rate')
      - Valid
    assumptions:
    - The 'loan_int_rate' column should be complete, with no missing values.
    - The 'loan_int_rate' values should be non-negative fractional numbers.
    - The 'loan_int_rate' should be within a reasonable range, typically between 0%
      and 30%.
  loan_intent:
    code:
    - - .isComplete('loan_intent')
      - Valid
    - - .isContainedIn('loan_intent', ['EDUCATION', 'MEDICAL', 'PERSONAL', 'VENTURE',
        'DEBTCONSOLIDATION', 'HOMEIMPROVEMENT'])
      - Valid
    assumptions:
    - The 'loan_intent' column should be complete, with no missing values.
    - The 'loan_intent' should only contain values from the set ['EDUCATION', 'MEDICAL',
      'PERSONAL', 'VENTURE', 'DEBTCONSOLIDATION', 'HOMEIMPROVEMENT'].
  loan_percent_income:
    code:
    - - '.hasMax(''loan_percent_income'', lambda x: x < 1.0)'
      - Valid
    - - .isComplete('loan_percent_income')
      - Valid
    - - .isNonNegative('loan_percent_income')
      - Valid
    assumptions:
    - The 'loan_percent_income' column should be complete, with no missing values.
    - The 'loan_percent_income' values should be non-negative fractional numbers.
    - The 'loan_percent_income' should be a realistic percentage, typically less than
      100%.
  person_age:
    code:
    - - '.hasMax(''person_age'', lambda x: x <= 80)'
      - Valid
    - - '.hasMin(''person_age'', lambda x: x >= 18)'
      - Valid
    - - .isComplete('person_age')
      - Valid
    - - .isNonNegative('person_age')
      - Valid
    assumptions:
    - The 'person_age' column should be complete, with no missing values.
    - The 'person_age' values should be non-negative integers.
    - The 'person_age' should contain values within a realistic range for adults,
      typically between 18 and 80.
  person_emp_length:
    code:
    - - .isComplete('person_emp_length')
      - Valid
    - - .isNonNegative('person_emp_length')
      - Valid
    assumptions:
    - The 'person_emp_length' column should be complete, with no missing values.
    - The 'person_emp_length' values should be non-negative numbers representing years
      of employment.
  person_home_ownership:
    code:
    - - .isComplete('person_home_ownership')
      - Valid
    - - .isContainedIn('person_home_ownership', ['RENT', 'MORTGAGE', 'OWN', 'OTHER'])
      - Valid
    assumptions:
    - The 'person_home_ownership' column should be complete, with no missing values.
    - The 'person_home_ownership' should only contain values from the set ['RENT',
      'MORTGAGE', 'OWN', 'OTHER'].
  person_income:
    code:
    - - .isComplete('person_income')
      - Valid
    - - .isNonNegative('person_income')
      - Valid
    assumptions:
    - The 'person_income' column should be complete, with no missing values.
    - The 'person_income' values should be non-negative integers.
    - The 'person_income' should have reasonable values that reflect actual income
      levels.
