constraints:
  cb_person_cred_hist_length:
    code:
    - - .isComplete('cb_person_cred_hist_length')
      - Valid
    - - .isNonNegative('cb_person_cred_hist_length')
      - Valid
    assumptions:
    - The column 'cb_person_cred_hist_length' should be complete with no missing values.
    - The values in 'cb_person_cred_hist_length' should be non-negative.
    - The values in 'cb_person_cred_hist_length' should be integers within a realistic
      range.
  cb_person_default_on_file:
    code:
    - - .isComplete('cb_person_default_on_file')
      - Valid
    - - .isContainedIn('cb_person_default_on_file', ['N', 'Y'])
      - Valid
    assumptions:
    - The column 'cb_person_default_on_file' should be complete with no missing values.
    - 'The values in ''cb_person_default_on_file'' should be one of the categories:
      ''N'', ''Y''.'
  id:
    code:
    - - .isComplete('id')
      - Valid
    - - .isNonNegative('id')
      - Valid
    - - .isUnique('id')
      - Valid
    assumptions:
    - The column 'id' should be complete with no missing values.
    - The values in 'id' should be unique.
    - The values in 'id' should be non-negative.
  loan_amnt:
    code:
    - - .isComplete('loan_amnt')
      - Valid
    - - .isNonNegative('loan_amnt')
      - Valid
    - - '.satisfies(''loan_amnt > 15000 AND loan_amnt <= 30000'', ''loan_amnt_category_high'',
        lambda x: x == 1.0)'
      - Invalid
    - - '.satisfies(''loan_amnt > 30000'', ''loan_amnt_category_very_high'', lambda
        x: x == 1.0)'
      - Invalid
    - - '.satisfies(''loan_amnt > 5000 AND loan_amnt <= 15000'', ''loan_amnt_category_medium'',
        lambda x: x == 1.0)'
      - Invalid
    - - '.satisfies(''loan_amnt >= 0 AND loan_amnt <= 5000'', ''loan_amnt_category_low'',
        lambda x: x == 1.0)'
      - Invalid
    assumptions:
    - The column 'loan_amnt' should be complete with no missing values.
    - The values in 'loan_amnt' should be non-negative.
    - The 'loan_amnt' values are categorized into 'Low', 'Medium', 'High', and 'Very
      High' using specific bins.
  loan_amnt_category:
    code:
    - - .isContainedIn('loan_amnt_category', ['Low', 'Medium', 'High', 'Very High'])
      - Invalid
    assumptions:
    - 'The column ''loan_amnt_category'' is derived from ''loan_amnt'' and should
      contain categories: ''Low'', ''Medium'', ''High'', ''Very High''.'
  loan_grade:
    code:
    - - .isComplete('loan_grade')
      - Valid
    - - .isContainedIn('loan_grade', ['A', 'B', 'C', 'D', 'E', 'F', 'G'])
      - Valid
    assumptions:
    - The column 'loan_grade' should be complete with no missing values.
    - 'The values in ''loan_grade'' should be one of the categories: ''A'', ''B'',
      ''C'', ''D'', ''E'', ''F'', ''G''.'
  loan_int_rate:
    code:
    - - .isComplete('loan_int_rate')
      - Valid
    - - .isNonNegative('loan_int_rate')
      - Valid
    assumptions:
    - The column 'loan_int_rate' should be complete with no missing values.
    - The values in 'loan_int_rate' should be non-negative.
    - The 'loan_int_rate' should be appropriately scaled for model training.
  loan_percent_income:
    code:
    - - .isComplete('loan_percent_income')
      - Valid
    - - .isNonNegative('loan_percent_income')
      - Valid
    assumptions:
    - The column 'loan_percent_income' should be complete with no missing values.
    - The values in 'loan_percent_income' should be non-negative.
    - The 'loan_percent_income' should be appropriately scaled for model training.
  person_home_ownership:
    code:
    - - .isComplete('person_home_ownership')
      - Valid
    - - .isContainedIn('person_home_ownership', ['RENT', 'MORTGAGE', 'OWN', 'OTHER'])
      - Valid
    assumptions:
    - The column 'person_home_ownership' should be complete with no missing values.
    - 'The values in ''person_home_ownership'' should be one of the categories: ''RENT'',
      ''MORTGAGE'', ''OWN'', ''OTHER''.'
