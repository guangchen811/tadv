constraints:
  cb_person_cred_hist_length:
    code:
    - - .isNonNegative('cb_person_cred_hist_length')
      - Valid
    assumptions:
    - Assume 'cb_person_cred_hist_length' is non-negative, as credit history length
      cannot be negative.
  cb_person_default_on_file:
    code:
    - - .isContainedIn('cb_person_default_on_file', ['Y', 'N'])
      - Valid
    assumptions:
    - Assume 'cb_person_default_on_file' is either 'Y' or 'N'.
  id:
    code:
    - - .isUnique('id')
      - Valid
    assumptions:
    - Assume 'id' is unique across the dataset.
  loan_amnt:
    code:
    - - .isPositive('loan_amnt')
      - Valid
    assumptions:
    - Assume 'loan_amnt' is positive, as loan amounts should be greater than zero.
  loan_grade:
    code:
    - - .isContainedIn('loan_grade', ['A', 'B', 'C', 'D', 'E', 'F', 'G'])
      - Valid
    assumptions:
    - 'Assume ''loan_grade'' is one of the valid grades: ''A'', ''B'', ''C'', ''D'',
      ''E'', ''F'', or ''G''.'
  loan_int_rate:
    code:
    - - '.hasMax(''loan_int_rate'', lambda x: x <= 100)'
      - Valid
    - - .isNonNegative('loan_int_rate')
      - Valid
    assumptions:
    - Assume 'loan_int_rate' is non-negative and typically should be between 0 and
      100 (interpreted as percentages).
  loan_intent:
    code:
    - - .isContainedIn('loan_intent', ['EDUCATION', 'HOMEIMPROVEMENT', 'PERSONAL',
        'DEBTCONSOLIDATION', 'MEDICAL', 'VENTURE'])
      - Valid
    assumptions:
    - 'Assume ''loan_intent'' is one of the known categories: ''EDUCATION'', ''HOMEIMPROVEMENT'',
      ''PERSONAL'', ''DEBTCONSOLIDATION'', ''MEDICAL'', or ''VENTURE''.'
  loan_percent_income:
    code:
    - - '.hasMax(''loan_percent_income'', lambda x: x <= 1)'
      - Valid
    - - .isNonNegative('loan_percent_income')
      - Valid
    assumptions:
    - Assume 'loan_percent_income' is non-negative and typically a reasonable fraction
      of income, e.g., between 0 and 1.
  person_age:
    code:
    - - '.hasMax(''person_age'', lambda x: x <= 120)'
      - Valid
    - - .isNonNegative('person_age')
      - Valid
    assumptions:
    - Assume 'person_age' is non-negative and within a reasonable human age range,
      e.g., 0 to 120.
  person_emp_length:
    code:
    - - .isNonNegative('person_emp_length')
      - Valid
    assumptions:
    - Assume 'person_emp_length' is non-negative, as employment length cannot be negative.
  person_home_ownership:
    code:
    - - .isContainedIn('person_home_ownership', ['OWN', 'MORTGAGE', 'RENT', 'OTHER'])
      - Valid
    assumptions:
    - 'Assume ''person_home_ownership'' is one of the known categories: ''OWN'', ''MORTGAGE'',
      ''RENT'', or ''OTHER''.'
  person_income:
    code:
    - - .isNonNegative('person_income')
      - Valid
    assumptions:
    - Assume 'person_income' is non-negative, as income cannot be negative.
