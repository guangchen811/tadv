constraints:
  cb_person_cred_hist_length:
    code:
    - - .isNonNegative('cb_person_cred_hist_length')
      - Valid
    assumptions:
    - cb_person_cred_hist_length should be non-negative to ensure valid computation
      in cred_hist_ratio
  loan_amnt:
    code:
    - - .isPositive('loan_amnt')
      - Valid
    assumptions:
    - loan_amnt should be greater than 0 to avoid division by zero in loan_to_income
      and log transformation in log_loan_amnt
  loan_grade:
    code:
    - - .isContainedIn('loan_grade', ['A', 'B', 'C', 'D', 'E', 'F', 'G'])
      - Valid
    assumptions:
    - loan_grade should be one of ['A', 'B', 'C', 'D', 'E', 'F', 'G'] to ensure correct
      computation in high_grade
  loan_int_rate:
    code:
    - - .isNonNegative('loan_int_rate')
      - Valid
    assumptions:
    - loan_int_rate should be non-negative to ensure valid computation in loan_amnt_int_rate
  loan_percent_income:
    code:
    - - .isPositive('loan_percent_income')
      - Invalid
    assumptions:
    - loan_percent_income should be greater than 0 to avoid division by zero in emp_length_income_ratio
  person_home_ownership:
    code:
    - - .isContainedIn('person_home_ownership', ['OWN', 'MORTGAGE', 'RENT', 'OTHER'])
      - Valid
    assumptions:
    - person_home_ownership should be one of ['OWN', 'MORTGAGE', 'RENT', 'OTHER']
      to ensure correct computation in is_home_owner
  person_income:
    code:
    - - .isPositive('person_income')
      - Valid
    assumptions:
    - person_income should be greater than 0 to avoid division by zero in loan_to_income
