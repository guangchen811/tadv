constraints:
  cb_person_cred_hist_length:
    code:
    - - '.hasStandardDeviation(''cb_person_cred_hist_length'', lambda x: x > 1e-4)'
      - Valid
    - - .isComplete('cb_person_cred_hist_length')
      - Valid
    - - .isNonNegative('cb_person_cred_hist_length')
      - Valid
    assumptions:
    - Should be numeric with variance above 1e-4.
  cb_person_default_on_file:
    code:
    - - .isContainedIn('cb_person_default_on_file', ['Y', 'N'])
      - Valid
    assumptions:
    - 'Should contain categories: [''Y'', ''N''].'
  loan_amnt:
    code:
    - - '.hasStandardDeviation(''loan_amnt'', lambda x: x > 1e-4)'
      - Valid
    - - .isComplete('loan_amnt')
      - Valid
    - - .isNonNegative('loan_amnt')
      - Valid
    assumptions:
    - Should be numeric with variance above 1e-4.
  loan_grade:
    code:
    - - .isContainedIn('loan_grade', ['A', 'B', 'C', 'D', 'E', 'F', 'G'])
      - Valid
    assumptions:
    - 'Should contain categories: [''A'', ''B'', ''C'', ''D'', ''E'', ''F'', ''G''].'
  loan_int_rate:
    code:
    - - '.hasStandardDeviation(''loan_int_rate'', lambda x: x > 1e-4)'
      - Valid
    - - .isComplete('loan_int_rate')
      - Valid
    - - .isNonNegative('loan_int_rate')
      - Valid
    assumptions:
    - Should be numeric with variance above 1e-4.
  loan_intent:
    code:
    - - .isContainedIn('loan_intent', ['EDUCATION', 'HOMEIMPROVEMENT', 'PERSONAL',
        'DEBTCONSOLIDATION', 'MEDICAL', 'VENTURE'])
      - Valid
    assumptions:
    - 'Should contain categories: [''EDUCATION'', ''HOMEIMPROVEMENT'', ''PERSONAL'',
      ''DEBTCONSOLIDATION'', ''MEDICAL'', ''VENTURE''].'
  loan_percent_income:
    code:
    - - '.hasStandardDeviation(''loan_percent_income'', lambda x: x > 1e-4)'
      - Valid
    - - .isComplete('loan_percent_income')
      - Valid
    - - .isNonNegative('loan_percent_income')
      - Valid
    assumptions:
    - Should be numeric with variance above 1e-4.
  loan_status:
    code:
    - - .isComplete('loan_status')
      - Valid
    assumptions:
    - The column should be numeric.
  person_age:
    code: []
    assumptions: []
  person_emp_length:
    code:
    - - '.hasStandardDeviation(''person_emp_length'', lambda x: x > 1e-4)'
      - Valid
    - - .isComplete('person_emp_length')
      - Valid
    - - .isNonNegative('person_emp_length')
      - Valid
    assumptions:
    - Should be numeric with variance above 1e-4.
  person_home_ownership:
    code:
    - - .isContainedIn('person_home_ownership', ['OTHER', 'OWN', 'MORTGAGE', 'RENT'])
      - Valid
    assumptions:
    - 'Should contain categories: [''OTHER'', ''OWN'', ''MORTGAGE'', ''RENT''].'
  person_income:
    code:
    - - .isComplete('person_income')
      - Valid
    - - .isNonNegative('person_income')
      - Valid
    assumptions:
    - The column is used as the target variable and should be numeric.
