constraints:
  cb_person_cred_hist_length:
    code:
    - - .isComplete('cb_person_cred_hist_length')
      - Valid
    - - .isNonNegative('cb_person_cred_hist_length')
      - Valid
    assumptions:
    - cb_person_cred_hist_length should be complete (no missing values).
    - cb_person_cred_hist_length should be non-negative.
    - cb_person_cred_hist_length is likely to be an integer representing years.
  cb_person_default_on_file:
    code:
    - - .isComplete('cb_person_default_on_file')
      - Valid
    - - .isContainedIn('cb_person_default_on_file', ['N', 'Y'])
      - Valid
    assumptions:
    - cb_person_default_on_file should be complete (no missing values).
    - cb_person_default_on_file should be either 'N' or 'Y'.
  id:
    code:
    - - .isComplete('id')
      - Valid
    - - .isUnique('id')
      - Valid
    assumptions:
    - id should be complete (no missing values).
    - id should be unique.
  loan_amnt:
    code:
    - - .isComplete('loan_amnt')
      - Valid
    - - .isNonNegative('loan_amnt')
      - Valid
    assumptions:
    - loan_amnt should be complete (no missing values).
    - loan_amnt should be non-negative.
  loan_int_rate:
    code:
    - - .isComplete('loan_int_rate')
      - Valid
    - - .isNonNegative('loan_int_rate')
      - Valid
    assumptions:
    - loan_int_rate should be complete (no missing values).
    - loan_int_rate should be non-negative.
  loan_intent:
    code:
    - - .isComplete('loan_intent')
      - Valid
    - - .isContainedIn('loan_intent', ['EDUCATION', 'MEDICAL', 'PERSONAL', 'VENTURE',
        'DEBTCONSOLIDATION', 'HOMEIMPROVEMENT'])
      - Valid
    assumptions:
    - loan_intent should be complete (no missing values).
    - loan_intent should be one of ['EDUCATION', 'MEDICAL', 'PERSONAL', 'VENTURE',
      'DEBTCONSOLIDATION', 'HOMEIMPROVEMENT'].
  loan_percent_income:
    code:
    - - .isComplete('loan_percent_income')
      - Valid
    - - .isLessThanOrEqualTo('loan_percent_income', 1)
      - Invalid
    - - .isNonNegative('loan_percent_income')
      - Valid
    assumptions:
    - loan_percent_income should be complete (no missing values).
    - loan_percent_income should be non-negative.
    - loan_percent_income should be a fraction typically between 0 and 1.
  person_age:
    code:
    - - '.hasMax(''person_age'', lambda x: x < 120)'
      - Valid
    - - .isComplete('person_age')
      - Valid
    - - .isNonNegative('person_age')
      - Valid
    assumptions:
    - person_age should be complete (no missing values).
    - person_age should be non-negative.
    - person_age is likely to be an integer within a reasonable range for adult ages.
  person_emp_length:
    code:
    - - .isComplete('person_emp_length')
      - Valid
    - - .isNonNegative('person_emp_length')
      - Valid
    assumptions:
    - person_emp_length should be complete (no missing values).
    - person_emp_length should be non-negative.
  person_home_ownership:
    code:
    - - .isComplete('person_home_ownership')
      - Valid
    - - .isContainedIn('person_home_ownership', ['RENT', 'MORTGAGE', 'OWN', 'OTHER'])
      - Valid
    assumptions:
    - person_home_ownership should be complete (no missing values).
    - person_home_ownership should be one of ['RENT', 'MORTGAGE', 'OWN', 'OTHER'].
  person_income:
    code:
    - - .isComplete('person_income')
      - Valid
    - - .isNonNegative('person_income')
      - Valid
    assumptions:
    - person_income should be complete (no missing values).
    - person_income should be non-negative.
