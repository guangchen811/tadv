constraints:
  cb_person_cred_hist_length:
    code:
    - - .isComplete('cb_person_cred_hist_length')
      - Valid
    - - .isNonNegative('cb_person_cred_hist_length')
      - Valid
    assumptions:
    - The 'cb_person_cred_hist_length' column should be complete (no missing values).
    - The 'cb_person_cred_hist_length' column should contain non-negative values.
    - A longer credit history is generally a positive factor for loan approval.
  loan_amnt:
    code:
    - - .isComplete('loan_amnt')
      - Valid
    - - .isNonNegative('loan_amnt')
      - Valid
    assumptions:
    - The 'loan_amnt' column should be complete (no missing values).
    - The 'loan_amnt' column should contain non-negative values.
    - Loan amounts should be reasonable and within the limits typically offered by
      the lender.
  loan_grade:
    code:
    - - .isComplete('loan_grade')
      - Valid
    - - .isContainedIn('loan_grade', ['A', 'B', 'C', 'D', 'E', 'F', 'G'])
      - Valid
    assumptions:
    - The 'loan_grade' column should be complete (no missing values).
    - The 'loan_grade' column should contain values from the set {A, B, C, D, E, F,
      G}.
    - Higher loan grades (e.g., A, B) are usually associated with lower risk.
  loan_int_rate:
    code:
    - - '.hasMax(''loan_int_rate'', lambda x: x <= 50)'
      - Valid
    - - .isComplete('loan_int_rate')
      - Valid
    - - .isNonNegative('loan_int_rate')
      - Valid
    assumptions:
    - The 'loan_int_rate' column should be complete (no missing values).
    - The 'loan_int_rate' column should contain non-negative values.
    - Interest rates should typically be within expected bounds, such as 0% to 50%.
  loan_percent_income:
    code:
    - - .isComplete('loan_percent_income')
      - Valid
    - - .isNonNegative('loan_percent_income')
      - Valid
    assumptions:
    - The 'loan_percent_income' column should be complete (no missing values).
    - The 'loan_percent_income' column should contain non-negative values.
    - A higher loan percentage of income indicates higher risk and should be monitored.
  person_age:
    code:
    - - '.hasMax(''person_age'', lambda x: x <= 100)'
      - Valid
    - - '.hasMin(''person_age'', lambda x: x >= 18)'
      - Valid
    - - .isComplete('person_age')
      - Valid
    - - .isNonNegative('person_age')
      - Valid
    assumptions:
    - The 'person_age' column should be complete (no missing values).
    - The 'person_age' column should contain non-negative values.
    - The 'person_age' column should generally be within a reasonable range, possibly
      between 18 to 100, based on typical adult age ranges.
  person_emp_length:
    code:
    - - .isComplete('person_emp_length')
      - Valid
    - - .isNonNegative('person_emp_length')
      - Valid
    assumptions:
    - The 'person_emp_length' column should be complete (no missing values).
    - The 'person_emp_length' column should contain non-negative values.
    - A longer 'person_emp_length' is generally a positive indicator for loan repayment
      capability.
  person_home_ownership:
    code:
    - - .isComplete('person_home_ownership')
      - Valid
    - - .isContainedIn('person_home_ownership', ['RENT', 'MORTGAGE', 'OWN', 'OTHER'])
      - Valid
    assumptions:
    - The 'person_home_ownership' column should be complete (no missing values).
    - The 'person_home_ownership' column should contain values from the set {RENT,
      MORTGAGE, OWN, OTHER}.
    - Values in 'person_home_ownership' might imply different risk categories, which
      could affect loan approval.
  person_income:
    code:
    - - .isComplete('person_income')
      - Valid
    - - .isNonNegative('person_income')
      - Valid
    assumptions:
    - The 'person_income' column should be complete (no missing values).
    - The 'person_income' column should contain non-negative values.
    - A high value in 'person_income' is expected to be associated with a higher ability
      to repay the loan.
