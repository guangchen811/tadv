constraints:
  cb_person_default_on_file:
    code:
    - - .isComplete('cb_person_default_on_file')
      - Valid
    - - .isContainedIn('cb_person_default_on_file', ['Y', 'N'])
      - Valid
    assumptions:
    - The column 'cb_person_default_on_file' should be complete, suggesting a NOT
      NULL constraint.
    - The column 'cb_person_default_on_file' should have values from the set {'Y',
      'N'}, suggesting an IS IN constraint.
  id:
    code:
    - - .isComplete('id')
      - Valid
    - - .isUnique('id')
      - Valid
    assumptions:
    - The column 'id' should be complete, suggesting a NOT NULL constraint.
    - The column 'id' should have unique values, suggesting a UNIQUE constraint.
  loan_amnt:
    code:
    - - .isComplete('loan_amnt')
      - Valid
    - - .isNonNegative('loan_amnt')
      - Valid
    assumptions:
    - The column 'loan_amnt' should be complete, suggesting a NOT NULL constraint.
    - The column 'loan_amnt' should have non-negative values, suggesting an IS NON
      NEGATIVE constraint.
  loan_grade:
    code:
    - - .isComplete('loan_grade')
      - Valid
    - - .isContainedIn('loan_grade', ['A', 'B', 'C', 'D', 'E', 'F', 'G'])
      - Valid
    assumptions:
    - The column 'loan_grade' should be complete, suggesting a NOT NULL constraint.
    - The column 'loan_grade' should have values from the set {'A', 'B', 'C', 'D',
      'E', 'F', 'G'}, suggesting an IS IN constraint.
  loan_int_rate:
    code:
    - - .isComplete('loan_int_rate')
      - Valid
    - - .isNonNegative('loan_int_rate')
      - Valid
    assumptions:
    - The column 'loan_int_rate' should be complete, suggesting a NOT NULL constraint.
    - The column 'loan_int_rate' should have non-negative values, suggesting an IS
      NON NEGATIVE constraint.
