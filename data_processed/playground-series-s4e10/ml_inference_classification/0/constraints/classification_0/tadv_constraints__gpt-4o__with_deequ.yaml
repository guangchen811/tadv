constraints:
  cb_person_default_on_file:
    code:
    - - .isComplete('cb_person_default_on_file')
      - Valid
    - - .isContainedIn('cb_person_default_on_file', ['N', 'Y'])
      - Valid
    assumptions:
    - The column 'cb_person_default_on_file' should be complete, meaning no missing
      values.
    - The column 'cb_person_default_on_file' should only contain values from the set
      ['N', 'Y'].
  id:
    code:
    - - .isComplete('id')
      - Valid
    - - .isNonNegative('id')
      - Valid
    - - .isUnique('id')
      - Valid
    assumptions:
    - The column 'id' should be complete, meaning no missing values.
    - The column 'id' should contain unique values.
    - The column 'id' should contain non-negative values.
  loan_amnt:
    code:
    - - .isComplete('loan_amnt')
      - Valid
    - - .isNonNegative('loan_amnt')
      - Valid
    - - .isPositive('loan_amnt')
      - Valid
    assumptions:
    - The column 'loan_amnt' should be complete, meaning no missing values.
    - The column 'loan_amnt' should contain non-negative values.
    - The transformation applied to 'loan_amnt' assumes that values should be positive
      to compute log.
  loan_grade:
    code:
    - - .isComplete('loan_grade')
      - Valid
    - - .isContainedIn('loan_grade', ['A', 'B', 'C', 'D', 'E', 'F', 'G'])
      - Valid
    assumptions:
    - The column 'loan_grade' should be complete, meaning no missing values.
    - The column 'loan_grade' should only contain values from the set ['A', 'B', 'C',
      'D', 'E', 'F', 'G'].
  loan_int_rate:
    code:
    - - .isComplete('loan_int_rate')
      - Valid
    - - .isNonNegative('loan_int_rate')
      - Valid
    assumptions:
    - The column 'loan_int_rate' should be complete, meaning no missing values.
    - The column 'loan_int_rate' should contain non-negative values.
