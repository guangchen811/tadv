constraints:
  cb_person_cred_hist_length:
    code:
    - - .isNonNegative('cb_person_cred_hist_length')
      - Valid
    assumptions:
    - cb_person_cred_hist_length should be a non-negative integer
    - cb_person_cred_hist_length should be properly scaled using StandardScaler
  cb_person_default_on_file:
    code:
    - - .isContainedIn('cb_person_default_on_file', ['Y', 'N'])
      - Valid
    assumptions:
    - cb_person_default_on_file should be either 'Y' or 'N'
    - cb_person_default_on_file should be properly encoded using OneHotEncoder
  id:
    code:
    - - .isUnique('id')
      - Valid
    assumptions:
    - id should be a unique identifier for each record
  loan_amnt:
    code:
    - - .hasPattern('loan_amnt_category', 'Low|Medium|High|Very High')
      - Invalid
    - - .isNonNegative('loan_amnt')
      - Valid
    assumptions:
    - loan_amnt should be a non-negative integer
    - loan_amnt should be categorized into 'Low', 'Medium', 'High', or 'Very High'
      based on its value
  loan_amnt_category:
    code:
    - - .isContainedIn('loan_amnt_category', ['Low', 'Medium', 'High', 'Very High'])
      - Invalid
    assumptions:
    - 'loan_amnt_category should be one of the categories: ''Low'', ''Medium'', ''High'',
      ''Very High'''
    - loan_amnt_category should be derived from loan_amnt and properly encoded using
      OneHotEncoder
  loan_grade:
    code:
    - - .isContainedIn('loan_grade', ['A', 'B', 'C', 'D', 'E', 'F', 'G'])
      - Valid
    assumptions:
    - 'loan_grade should be one of the distinct values: ''A'', ''B'', ''C'', ''D'',
      ''E'', ''F'', ''G'''
    - loan_grade should be properly encoded using OneHotEncoder
  loan_int_rate:
    code:
    - - .isNonNegative('loan_int_rate')
      - Valid
    assumptions:
    - loan_int_rate should be a non-negative float
    - loan_int_rate should be properly scaled using StandardScaler
  loan_percent_income:
    code:
    - - .isNonNegative('loan_percent_income')
      - Valid
    assumptions:
    - loan_percent_income should be a non-negative float
    - loan_percent_income should be properly scaled using StandardScaler
  person_home_ownership:
    code:
    - - .isContainedIn('person_home_ownership', ['RENT', 'MORTGAGE', 'OWN', 'OTHER'])
      - Valid
    assumptions:
    - 'person_home_ownership should be one of the distinct values: ''RENT'', ''MORTGAGE'',
      ''OWN'', ''OTHER'''
    - person_home_ownership should be properly encoded using OneHotEncoder
