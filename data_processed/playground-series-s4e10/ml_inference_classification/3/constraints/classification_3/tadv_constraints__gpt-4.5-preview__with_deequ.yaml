constraints:
  cb_person_cred_hist_length:
    code:
    - - .isComplete('cb_person_cred_hist_length')
      - Valid
    - - .isNonNegative('cb_person_cred_hist_length')
      - Valid
    - - .satisfies('variance(cb_person_cred_hist_length) > 1e-4', 'cred_hist_length_variance')
      - Invalid
    assumptions:
    - cb_person_cred_hist_length should be complete without missing values
    - cb_person_cred_hist_length should be non-negative
    - cb_person_cred_hist_length should have a variance greater than 1e-4
  cb_person_default_on_file:
    code:
    - - .isComplete('cb_person_default_on_file')
      - Valid
    - - .isContainedIn('cb_person_default_on_file', ['Y', 'N'])
      - Valid
    assumptions:
    - cb_person_default_on_file should be complete without missing values
    - cb_person_default_on_file should only contain values among ['Y', 'N']
  loan_amnt:
    code:
    - - .isComplete('loan_amnt')
      - Valid
    - - .isPositive('loan_amnt')
      - Valid
    - - .satisfies('variance(loan_amnt) > 1e-4', 'loan_amnt_variance')
      - Invalid
    assumptions:
    - loan_amnt should be complete without missing values
    - loan_amnt should be strictly greater than 0 to prevent division by zero when
      computing income_to_loan
    - loan_amnt should have a variance greater than 1e-4
  loan_grade:
    code:
    - - .isComplete('loan_grade')
      - Valid
    - - .isContainedIn('loan_grade', ['A', 'B', 'C', 'D', 'E', 'F', 'G'])
      - Valid
    assumptions:
    - loan_grade should be complete without missing values
    - loan_grade should only contain values among ['A', 'B', 'C', 'D', 'E', 'F', 'G']
  loan_int_rate:
    code:
    - - .isComplete('loan_int_rate')
      - Valid
    - - .isNonNegative('loan_int_rate')
      - Valid
    - - .satisfies('variance(loan_int_rate) > 1e-4', 'loan_int_rate_variance')
      - Invalid
    assumptions:
    - loan_int_rate should be complete without missing values
    - loan_int_rate should be non-negative
    - loan_int_rate should have a variance greater than 1e-4
  loan_percent_income:
    code:
    - - .isComplete('loan_percent_income')
      - Valid
    - - .isNonNegative('loan_percent_income')
      - Valid
    - - .satisfies('variance(loan_percent_income) > 1e-4', 'loan_percent_income_variance')
      - Invalid
    assumptions:
    - loan_percent_income should be complete without missing values
    - loan_percent_income should be non-negative
    - loan_percent_income should have a variance greater than 1e-4
  person_age:
    code:
    - - '.hasMax(''person_age'', lambda x: x <= 100)'
      - Valid
    - - '.hasMin(''person_age'', lambda x: x >= 18)'
      - Valid
    - - .isComplete('person_age')
      - Valid
    - - .isNonNegative('person_age')
      - Valid
    assumptions:
    - person_age should be complete without missing values
    - person_age should be non-negative
    - person_age should be within a reasonable adult age range, e.g., between 18 and
      100
  person_emp_length:
    code:
    - - .isComplete('person_emp_length')
      - Valid
    - - .isNonNegative('person_emp_length')
      - Valid
    - - .satisfies('variance(person_emp_length) > 1e-4', 'person_emp_length_variance')
      - Invalid
    assumptions:
    - person_emp_length should be complete without missing values
    - person_emp_length should be non-negative
    - person_emp_length should have a variance greater than 1e-4
  person_home_ownership:
    code:
    - - .isComplete('person_home_ownership')
      - Valid
    - - .isContainedIn('person_home_ownership', ['RENT', 'MORTGAGE', 'OWN', 'OTHER'])
      - Valid
    assumptions:
    - person_home_ownership should be complete without missing values
    - person_home_ownership should only contain values among ['RENT', 'MORTGAGE',
      'OWN', 'OTHER']
  person_income:
    code:
    - - .isComplete('person_income')
      - Valid
    - - .isPositive('person_income')
      - Valid
    - - .satisfies('variance(person_income) > 1e-4', 'person_income_variance')
      - Invalid
    assumptions:
    - person_income should be complete without missing values
    - person_income should be strictly greater than 0 to avoid division errors
    - person_income should have a variance greater than 1e-4
