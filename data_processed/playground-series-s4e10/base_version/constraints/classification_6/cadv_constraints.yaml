constraints:
  cb_person_default_on_file:
    code:
    - - .isContainedIn('cb_person_default_on_file', ['Y', 'N'])
      - Valid
    assumptions:
    - Values should be either 'Y' or 'N', indicating whether there is a default on
      file.
  id:
    code:
    - - .isUnique('id')
      - Valid
    assumptions:
    - Values should be unique to serve as a proper identifier for each record in the
      dataset.
  loan_amnt:
    code:
    - - '.hasMax(''loan_amnt'', lambda x: x <= 1000000)'
      - Valid
    - - .isNonNegative('loan_amnt')
      - Valid
    assumptions:
    - Values should be non-negative as loan amounts cannot be negative.
    - Loan amounts should be reasonable, likely not exceeding typical personal loan
      amounts.
  loan_grade:
    code:
    - - .isContainedIn('loan_grade', ['A', 'B', 'C', 'D', 'E', 'F', 'G'])
      - Valid
    assumptions:
    - 'Values should be one of the expected categories: A, B, C, D, E, F, G, to ensure
      valid loan grades.'
  loan_int_rate:
    code:
    - - .isContainedIn('loan_int_rate', list(range(0, 101)))
      - Invalid
    - - .isNonNegative('loan_int_rate')
      - Valid
    assumptions:
    - Values should be non-negative as interest rates cannot be negative.
    - Values should be within a reasonable range (e.g., 0% - 100%), as interest rates
      typically do not exceed these limits.
  loan_status:
    code:
    - - .isContainedIn('loan_status', [0, 1])
      - Invalid
    assumptions:
    - Values should be either 0 or 1, representing the binary classification target
      for loan status.
  person_age:
    code:
    - - .isContainedIn('person_age', list(range(18, 101)))
      - Invalid
    - - .isNonNegative('person_age')
      - Valid
    assumptions:
    - Values should be non-negative as age cannot be negative.
    - Values should be reasonable, assuming a typical working age range (e.g., 18-100)
      for adult individuals.
  person_home_ownership:
    code:
    - - .isContainedIn('person_home_ownership', ['RENT', 'OWN', 'MORTGAGE', 'OTHER'])
      - Valid
    assumptions:
    - 'Values should be one of the expected categories: RENT, OWN, MORTGAGE, OTHER,
      to ensure valid home ownership statuses.'
  person_income:
    code:
    - - .isGreaterThan('person_income', 'loan_amnt')
      - Invalid
    - - .isNonNegative('loan_amnt')
      - Valid
    - - .isNonNegative('person_income')
      - Valid
    assumptions:
    - Values should be non-negative as income cannot be negative.
    - Loan-to-Income Ratio is calculated, so person_income should not be zero to avoid
      division by zero errors.
