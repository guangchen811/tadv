constraints:
  loan_amnt:
    code:
    - - '.hasMin(''loan_amnt'', lambda x: x >= 0)'
      - Valid
    - - .isComplete('loan_amnt')
      - Valid
    - - .isNonNegative('loan_amnt')
      - Valid
    assumptions:
    - The loan_amnt column should not contain NULL values.
    - The loan_amnt column should contain non-negative values.
    - The loan_amnt column should have a minimum value of 0.
  loan_int_rate:
    code:
    - - '.hasMax(''loan_int_rate'', lambda x: x <= 100)'
      - Valid
    - - .isComplete('loan_int_rate')
      - Valid
    - - .isNonNegative('loan_int_rate')
      - Valid
    assumptions:
    - The loan_int_rate column should not contain NULL values.
    - The loan_int_rate column should contain non-negative values.
    - The loan_int_rate column should have a maximum value of 100.
  person_income:
    code:
    - - '.hasMin(''person_income'', lambda x: x >= 0)'
      - Valid
    - - .isComplete('person_income')
      - Valid
    - - .isNonNegative('person_income')
      - Valid
    assumptions:
    - The person_income column should not contain NULL values.
    - The person_income column should contain non-negative values.
    - The person_income column should have a minimum value of 0.
