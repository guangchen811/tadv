constraints:
  cb_person_default_on_file:
    code:
    - - .isComplete('cb_person_default_on_file')
      - Valid
    - - .isContainedIn('cb_person_default_on_file', ['Y', 'N'])
      - Valid
    assumptions:
    - The column 'cb_person_default_on_file' should have values among ['Y', 'N'].
    - The column 'cb_person_default_on_file' should not contain null values.
  id:
    code:
    - - .isComplete('id')
      - Valid
    - - .isUnique('id')
      - Valid
    assumptions:
    - The column 'id' should not contain null values.
    - The column 'id' should have unique values.
  loan_amnt:
    code:
    - - .isComplete('loan_amnt')
      - Valid
    - - .isNonNegative('loan_amnt')
      - Valid
    assumptions:
    - The column 'loan_amnt' should not contain null values.
    - The column 'loan_amnt' should have non-negative values.
  loan_grade:
    code:
    - - .isComplete('loan_grade')
      - Valid
    - - .isContainedIn('loan_grade', ['A', 'B', 'C', 'D', 'E', 'F', 'G'])
      - Valid
    assumptions:
    - The column 'loan_grade' should have values among ['A', 'B', 'C', 'D', 'E', 'F',
      'G'].
    - The column 'loan_grade' should not contain null values.
  loan_int_rate:
    code:
    - - .isComplete('loan_int_rate')
      - Valid
    - - .isNonNegative('loan_int_rate')
      - Valid
    assumptions:
    - The column 'loan_int_rate' should not contain null values.
    - The column 'loan_int_rate' should have non-negative values.
  loan_intent:
    code:
    - - .isComplete('loan_intent')
      - Valid
    - - .isContainedIn('loan_intent', ['EDUCATION', 'HOMEIMPROVEMENT', 'PERSONAL',
        'DEBTCONSOLIDATION', 'MEDICAL', 'VENTURE'])
      - Valid
    assumptions:
    - The column 'loan_intent' should have values among ['EDUCATION', 'HOMEIMPROVEMENT',
      'PERSONAL', 'DEBTCONSOLIDATION', 'MEDICAL', 'VENTURE'].
    - The column 'loan_intent' should not contain null values.
  loan_percent_income:
    code:
    - - .isComplete('loan_percent_income')
      - Valid
    - - .isNonNegative('loan_percent_income')
      - Valid
    assumptions:
    - The column 'loan_percent_income' should not contain null values.
    - The column 'loan_percent_income' should have non-negative values.
  person_age:
    code:
    - - .isComplete('person_age')
      - Valid
    - - .isNonNegative('person_age')
      - Valid
    assumptions:
    - The column 'person_age' should not contain null values.
    - The column 'person_age' should have non-negative values.
  person_emp_length:
    code:
    - - .isComplete('person_emp_length')
      - Valid
    - - .isNonNegative('person_emp_length')
      - Valid
    assumptions:
    - The column 'person_emp_length' should not contain null values.
    - The column 'person_emp_length' should have non-negative values.
  person_home_ownership:
    code:
    - - .isComplete('person_home_ownership')
      - Valid
    - - .isContainedIn('person_home_ownership', ['OWN', 'MORTGAGE', 'RENT', 'OTHER'])
      - Valid
    assumptions:
    - The column 'person_home_ownership' should have values among ['OWN', 'MORTGAGE',
      'RENT', 'OTHER'].
    - The column 'person_home_ownership' should not contain null values.
  person_income:
    code:
    - - .isComplete('person_income')
      - Valid
    - - .isNonNegative('person_income')
      - Valid
    assumptions:
    - The column 'person_income' should not contain null values.
    - The column 'person_income' should have non-negative values.
