constraints:
  cb_person_cred_hist_length:
    code:
    - - .isComplete('cb_person_cred_hist_length')
      - Valid
    - - .isNonNegative('cb_person_cred_hist_length')
      - Valid
    assumptions:
    - The column 'cb_person_cred_hist_length' should be complete, meaning no missing
      values are allowed.
    - The column 'cb_person_cred_hist_length' should contain only non-negative values,
      as credit history length cannot be negative.
  cb_person_default_on_file:
    code:
    - - .isComplete('cb_person_default_on_file')
      - Valid
    - - .isContainedIn('cb_person_default_on_file', ['N', 'Y'])
      - Valid
    assumptions:
    - The column 'cb_person_default_on_file' should be complete, meaning no missing
      values are allowed.
    - 'The column ''cb_person_default_on_file'' should only contain values from the
      set: [''N'', ''Y''].'
  loan_amnt:
    code:
    - - .isComplete('loan_amnt')
      - Valid
    - - .isNonNegative('loan_amnt')
      - Valid
    assumptions:
    - The column 'loan_amnt' should be complete, meaning no missing values are allowed.
    - The column 'loan_amnt' should contain only non-negative values, as loan amount
      cannot be negative.
  loan_grade:
    code:
    - - .isComplete('loan_grade')
      - Valid
    - - .isContainedIn('loan_grade', ['A', 'B', 'C', 'D', 'E', 'F', 'G'])
      - Valid
    assumptions:
    - The column 'loan_grade' should be complete, meaning no missing values are allowed.
    - 'The column ''loan_grade'' should only contain values from the set: [''A'',
      ''B'', ''C'', ''D'', ''E'', ''F'', ''G''].'
  loan_int_rate:
    code:
    - - .isComplete('loan_int_rate')
      - Valid
    - - .isNonNegative('loan_int_rate')
      - Valid
    assumptions:
    - The column 'loan_int_rate' should be complete, meaning no missing values are
      allowed.
    - The column 'loan_int_rate' should contain only non-negative values, as interest
      rates cannot be negative.
  loan_intent:
    code:
    - - .isComplete('loan_intent')
      - Valid
    - - .isContainedIn('loan_intent', ['EDUCATION', 'MEDICAL', 'PERSONAL', 'VENTURE',
        'DEBTCONSOLIDATION', 'HOMEIMPROVEMENT'])
      - Valid
    assumptions:
    - The column 'loan_intent' should be complete, meaning no missing values are allowed.
    - 'The column ''loan_intent'' should only contain values from the set: [''EDUCATION'',
      ''MEDICAL'', ''PERSONAL'', ''VENTURE'', ''DEBTCONSOLIDATION'', ''HOMEIMPROVEMENT''].'
  loan_percent_income:
    code:
    - - .isComplete('loan_percent_income')
      - Valid
    - - .isNonNegative('loan_percent_income')
      - Valid
    assumptions:
    - The column 'loan_percent_income' should be complete, meaning no missing values
      are allowed.
    - The column 'loan_percent_income' should contain only non-negative values, as
      the percentage of income cannot be negative.
  loan_status:
    code:
    - - .isComplete('loan_status')
      - Valid
    - - .isContainedIn('loan_status', ['0', '1'])
      - Valid
    assumptions:
    - The column 'loan_status' should be complete, meaning no missing values are allowed.
    - 'The column ''loan_status'' should only contain values from the set: [''0'',
      ''1''], representing binary status.'
  person_age:
    code:
    - - .isComplete('person_age')
      - Valid
    - - .isPositive('person_age')
      - Valid
    assumptions:
    - The column 'person_age' should be complete, meaning no missing values are allowed.
    - The column 'person_age' should contain only positive values, as age cannot be
      negative.
  person_emp_length:
    code:
    - - .isComplete('person_emp_length')
      - Valid
    - - .isNonNegative('person_emp_length')
      - Valid
    assumptions:
    - The column 'person_emp_length' should be complete, meaning no missing values
      are allowed.
    - The column 'person_emp_length' should contain only non-negative values, as employment
      length cannot be negative.
  person_home_ownership:
    code:
    - - .isComplete('person_home_ownership')
      - Valid
    - - .isContainedIn('person_home_ownership', ['RENT', 'MORTGAGE', 'OWN', 'OTHER'])
      - Valid
    assumptions:
    - The column 'person_home_ownership' should be complete, meaning no missing values
      are allowed.
    - 'The column ''person_home_ownership'' should only contain values from the set:
      [''RENT'', ''MORTGAGE'', ''OWN'', ''OTHER''].'
  person_income:
    code:
    - - .isComplete('person_income')
      - Valid
    - - .isNonNegative('person_income')
      - Valid
    assumptions:
    - The column 'person_income' should be complete, meaning no missing values are
      allowed.
    - The column 'person_income' should contain only non-negative values, as income
      cannot be negative.
