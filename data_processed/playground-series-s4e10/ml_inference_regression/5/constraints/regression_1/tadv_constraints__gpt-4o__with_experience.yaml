constraints:
  cb_person_cred_hist_length:
    code:
    - - .isComplete('cb_person_cred_hist_length')
      - Valid
    - - .isNonNegative('cb_person_cred_hist_length')
      - Valid
    assumptions:
    - Column should be NOT NULL.
    - Should be a non-negative integer.
  id:
    code:
    - - .isComplete('id')
      - Valid
    - - .isUnique('id')
      - Valid
    assumptions:
    - Column should be NOT NULL.
    - Values should be unique.
  loan_amnt:
    code:
    - - '.hasMin(''loan_amnt'', lambda x: x >= 0)'
      - Valid
    - - .isComplete('loan_amnt')
      - Valid
    - - .isNonNegative('loan_amnt')
      - Valid
    assumptions:
    - Column should be NOT NULL.
    - Should be a non-negative integer.
    - Minimum loan amount should be 0.
  loan_grade:
    code:
    - - .isComplete('loan_grade')
      - Valid
    - - .isContainedIn('loan_grade', ['A', 'B', 'C', 'D', 'E', 'F', 'G'])
      - Valid
    assumptions:
    - 'Value should be within the known categories: [''A'', ''B'', ''C'', ''D'', ''E'',
      ''F'', ''G''].'
    - Column should be NOT NULL.
  loan_int_rate:
    code:
    - - .isComplete('loan_int_rate')
      - Valid
    - - .isNonNegative('loan_int_rate')
      - Valid
    assumptions:
    - Column should be NOT NULL.
    - Should be a non-negative number.
  loan_intent:
    code:
    - - .isComplete('loan_intent')
      - Valid
    - - .isContainedIn('loan_intent', ['EDUCATION', 'HOMEIMPROVEMENT', 'PERSONAL',
        'DEBTCONSOLIDATION', 'MEDICAL', 'VENTURE'])
      - Valid
    assumptions:
    - 'Value should be within the known categories: [''EDUCATION'', ''HOMEIMPROVEMENT'',
      ''PERSONAL'', ''DEBTCONSOLIDATION'', ''MEDICAL'', ''VENTURE''].'
    - Column should be NOT NULL.
  loan_percent_income:
    code:
    - - .isComplete('loan_percent_income')
      - Valid
    - - .isNonNegative('loan_percent_income')
      - Valid
    assumptions:
    - Column should be NOT NULL.
    - Should be a non-negative number.
  loan_status:
    code:
    - - .isComplete('loan_status')
      - Valid
    - - .isContainedIn('loan_status', ['0', '1'])
      - Valid
    assumptions:
    - Value should be either '0' or '1'.
    - Column should be NOT NULL.
  person_age:
    code:
    - - '.hasMin(''person_age'', lambda x: x >= 0)'
      - Valid
    - - .isComplete('person_age')
      - Valid
    - - .isNonNegative('person_age')
      - Valid
    assumptions:
    - Column should be NOT NULL.
    - Should be a non-negative integer.
    - Minimum age should be 0.
  person_emp_length:
    code:
    - - .isComplete('person_emp_length')
      - Valid
    - - .isNonNegative('person_emp_length')
      - Valid
    assumptions:
    - Column should be NOT NULL.
    - Should be a non-negative number.
  person_home_ownership:
    code:
    - - .isComplete('person_home_ownership')
      - Valid
    - - .isContainedIn('person_home_ownership', ['OTHER', 'OWN', 'MORTGAGE', 'RENT'])
      - Valid
    assumptions:
    - 'Value should be within the known categories: [''OTHER'', ''OWN'', ''MORTGAGE'',
      ''RENT'']. Consider adding other reasonable values if applicable.'
    - Column should be NOT NULL.
