constraints:
  cb_person_cred_hist_length:
    code:
    - - .isComplete('cb_person_cred_hist_length')
      - Valid
    - - .satisfies('cb_person_cred_hist_length >= 0', 'cb_person_cred_hist_length_non_negative')
      - Valid
    assumptions:
    - The column should not contain null values.
    - The column should be an integer.
    - The column should have a minimum value constraint.
  id:
    code:
    - - .isComplete('id')
      - Valid
    - - .isUnique('id')
      - Valid
    assumptions:
    - The column should not contain null values.
    - The column should have unique values.
  loan_amnt:
    code:
    - - .isComplete('loan_amnt')
      - Valid
    - - .isNonNegative('loan_amnt')
      - Valid
    assumptions:
    - The column should not contain null values.
    - The column should be an integer.
    - The column should be non-negative.
    - The column should have a maximum value constraint.
  loan_grade:
    code:
    - - .isComplete('loan_grade')
      - Valid
    - - .isContainedIn('loan_grade', ['A', 'B', 'C', 'D', 'E', 'F', 'G'])
      - Valid
    assumptions:
    - The column should have values 'A', 'B', 'C', 'D', 'E', 'F', 'G'.
    - The column should not contain null values.
  loan_int_rate:
    code:
    - - .isComplete('loan_int_rate')
      - Valid
    - - .isNonNegative('loan_int_rate')
      - Valid
    assumptions:
    - The column should not contain null values.
    - The column should be a fractional number.
    - The column should be non-negative.
  loan_intent:
    code:
    - - .isComplete('loan_intent')
      - Valid
    - - .isContainedIn('loan_intent', ['EDUCATION', 'HOMEIMPROVEMENT', 'PERSONAL',
        'DEBTCONSOLIDATION', 'MEDICAL', 'VENTURE'])
      - Valid
    assumptions:
    - The column should have values 'EDUCATION', 'HOMEIMPROVEMENT', 'PERSONAL', 'DEBTCONSOLIDATION',
      'MEDICAL', 'VENTURE'.
    - The column should not contain null values.
  loan_percent_income:
    code:
    - - .isComplete('loan_percent_income')
      - Valid
    - - .isNonNegative('loan_percent_income')
      - Valid
    assumptions:
    - The column should not contain null values.
    - The column should be a fractional number.
    - The column should be non-negative.
  loan_status:
    code:
    - - .isComplete('loan_status')
      - Valid
    - - .isContainedIn('loan_status', ['0', '1'])
      - Valid
    assumptions:
    - The column should have values '0', '1'.
    - The column should not contain null values.
  person_age:
    code:
    - - .isComplete('person_age')
      - Valid
    - - .satisfies('person_age > 0', 'person_age_positive')
      - Valid
    assumptions:
    - The column should not contain null values.
    - The column should be an integer.
    - The column should have a minimum value constraint, e.g., age should be greater
      than 0.
  person_emp_length:
    code:
    - - .isComplete('person_emp_length')
      - Valid
    - - .isNonNegative('person_emp_length')
      - Valid
    assumptions:
    - The column should not contain null values.
    - The column should be a fractional number.
    - The column should be non-negative.
  person_home_ownership:
    code:
    - - .isComplete('person_home_ownership')
      - Valid
    - - .isContainedIn('person_home_ownership', ['OWN', 'MORTGAGE', 'RENT', 'OTHER'])
      - Valid
    assumptions:
    - The column should have values 'OWN', 'MORTGAGE', 'RENT', 'OTHER'.
    - The column should not contain null values.
