constraints:
  cb_person_cred_hist_length:
    code:
    - - .isNonNegative('cb_person_cred_hist_length')
      - Valid
    - - .satisfies('cb_person_cred_hist_length == round(cb_person_cred_hist_length)',
        'cb_person_cred_hist_length should be an integer')
      - Valid
    assumptions:
    - Should be a non-negative integer
  cb_person_default_on_file:
    code:
    - - .isContainedIn('cb_person_default_on_file', ['Y', 'N'])
      - Valid
    assumptions:
    - Must be one of ['Y', 'N']
  id:
    code:
    - - .isUnique('id')
      - Valid
    assumptions:
    - Should be a unique identifier
  loan_amnt:
    code:
    - - .isPositive('loan_amnt')
      - Valid
    - - .satisfies('loan_amnt == round(loan_amnt)', 'loan_amnt should be an integer')
      - Valid
    assumptions:
    - Should be a positive integer
  loan_grade:
    code:
    - - .isContainedIn('loan_grade', ['A', 'B', 'C', 'D', 'E', 'F', 'G'])
      - Valid
    assumptions:
    - Must be one of ['A', 'B', 'C', 'D', 'E', 'F', 'G']
  loan_int_rate:
    code:
    - - .isLessThan('loan_int_rate', 100)
      - Invalid
    - - .isNonNegative('loan_int_rate')
      - Valid
    assumptions:
    - Should be a non-negative number
    - Should be less than 100
  loan_intent:
    code:
    - - .isContainedIn('loan_intent', ['EDUCATION', 'HOMEIMPROVEMENT', 'PERSONAL',
        'DEBTCONSOLIDATION', 'MEDICAL', 'VENTURE'])
      - Valid
    assumptions:
    - Must be one of ['EDUCATION', 'HOMEIMPROVEMENT', 'PERSONAL', 'DEBTCONSOLIDATION',
      'MEDICAL', 'VENTURE']
  loan_percent_income:
    code:
    - - .isLessThanOrEqualTo('loan_percent_income', 1)
      - Invalid
    - - .isNonNegative('loan_percent_income')
      - Valid
    assumptions:
    - Should be a non-negative number
    - Should be less than or equal to 1
  loan_status:
    code:
    - - .isContainedIn('loan_status', [0, 1])
      - Invalid
    assumptions:
    - Must be one of [0, 1]
  person_age:
    code:
    - - .isNonNegative('person_age')
      - Valid
    - - .satisfies('person_age == round(person_age)', 'person_age should be an integer')
      - Valid
    assumptions:
    - Should be a non-negative integer
  person_emp_length:
    code:
    - - .isNonNegative('person_emp_length')
      - Valid
    assumptions:
    - Should be a non-negative number
  person_home_ownership:
    code:
    - - .isContainedIn('person_home_ownership', ['OWN', 'MORTGAGE', 'RENT', 'OTHER'])
      - Valid
    assumptions:
    - Must be one of ['OWN', 'MORTGAGE', 'RENT', 'OTHER']
