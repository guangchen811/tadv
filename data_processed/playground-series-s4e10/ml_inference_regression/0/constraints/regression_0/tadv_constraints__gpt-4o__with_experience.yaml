constraints:
  cb_person_cred_hist_length:
    code:
    - - .isComplete('cb_person_cred_hist_length')
      - Valid
    - - .isNonNegative('cb_person_cred_hist_length')
      - Valid
    assumptions:
    - The column 'cb_person_cred_hist_length' should have complete data (NOT NULL
      constraint).
    - The column 'cb_person_cred_hist_length' is expected to be non-negative (IS NON
      NEGATIVE constraint).
  cb_person_default_on_file:
    code:
    - - .isComplete('cb_person_default_on_file')
      - Valid
    - - .isContainedIn('cb_person_default_on_file', ['Y', 'N'])
      - Valid
    assumptions:
    - The column 'cb_person_default_on_file' should have complete data (NOT NULL constraint).
    - The column 'cb_person_default_on_file' is expected to have values within ['Y',
      'N'] (IS IN constraint).
  id:
    code:
    - - .isComplete('id')
      - Valid
    - - .isUnique('id')
      - Valid
    assumptions:
    - The column 'id' should have unique values (UNIQUE constraint).
    - The column 'id' should have complete data (NOT NULL constraint).
  loan_amnt:
    code:
    - - .isComplete('loan_amnt')
      - Valid
    - - .isNonNegative('loan_amnt')
      - Valid
    assumptions:
    - The column 'loan_amnt' should have complete data (NOT NULL constraint).
    - The column 'loan_amnt' is expected to be non-negative (IS NON NEGATIVE constraint).
  loan_grade:
    code:
    - - .isComplete('loan_grade')
      - Valid
    - - .isContainedIn('loan_grade', ['A', 'B', 'C', 'D', 'E', 'F', 'G'])
      - Valid
    assumptions:
    - The column 'loan_grade' should have complete data (NOT NULL constraint).
    - The column 'loan_grade' is expected to have values within ['A', 'B', 'C', 'D',
      'E', 'F', 'G'] (IS IN constraint).
  loan_int_rate:
    code:
    - - .isComplete('loan_int_rate')
      - Valid
    - - .isNonNegative('loan_int_rate')
      - Valid
    assumptions:
    - The column 'loan_int_rate' should have complete data (NOT NULL constraint).
    - The column 'loan_int_rate' is expected to be non-negative (IS NON NEGATIVE constraint).
  person_home_ownership:
    code:
    - - .isComplete('person_home_ownership')
      - Valid
    - - .isContainedIn('person_home_ownership', ['OWN', 'MORTGAGE', 'RENT', 'OTHER'])
      - Valid
    assumptions:
    - The column 'person_home_ownership' should have complete data (NOT NULL constraint).
    - The column 'person_home_ownership' is expected to have values within ['OWN',
      'MORTGAGE', 'RENT', 'OTHER'] (IS IN constraint).
