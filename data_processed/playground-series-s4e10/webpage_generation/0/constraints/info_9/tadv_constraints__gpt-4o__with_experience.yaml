constraints:
  cb_person_cred_hist_length:
    code:
    - - '.hasMean(''cb_person_cred_hist_length'', lambda x: x > 0)'
      - Valid
    - - '.hasStandardDeviation(''cb_person_cred_hist_length'', lambda x: x > 0)'
      - Valid
    - - .isComplete('cb_person_cred_hist_length')
      - Valid
    - - .isNonNegative('cb_person_cred_hist_length')
      - Valid
    assumptions:
    - The column 'cb_person_cred_hist_length' should be complete (NOT NULL).
    - The column 'cb_person_cred_hist_length' should contain non-negative values.
    - The column 'cb_person_cred_hist_length' should have a mean and standard deviation
      constraint as it is a numeric column.
  loan_amnt:
    code:
    - - '.hasMean(''loan_amnt'', lambda x: x > 0)'
      - Valid
    - - '.hasStandardDeviation(''loan_amnt'', lambda x: x > 0)'
      - Valid
    - - .isComplete('loan_amnt')
      - Valid
    - - .isNonNegative('loan_amnt')
      - Valid
    assumptions:
    - The column 'loan_amnt' should be complete (NOT NULL).
    - The column 'loan_amnt' should contain non-negative values.
    - The column 'loan_amnt' should have a mean and standard deviation constraint
      as it is a numeric column.
  loan_int_rate:
    code:
    - - '.hasMean(''loan_int_rate'', lambda x: x > 0)'
      - Valid
    - - '.hasStandardDeviation(''loan_int_rate'', lambda x: x > 0)'
      - Valid
    - - .isComplete('loan_int_rate')
      - Valid
    - - .isNonNegative('loan_int_rate')
      - Valid
    assumptions:
    - The column 'loan_int_rate' should be complete (NOT NULL).
    - The column 'loan_int_rate' should contain non-negative values.
    - The column 'loan_int_rate' should have a mean and standard deviation constraint
      as it is a numeric column.
  loan_percent_income:
    code:
    - - '.hasMean(''loan_percent_income'', lambda x: x > 0)'
      - Valid
    - - '.hasStandardDeviation(''loan_percent_income'', lambda x: x > 0)'
      - Valid
    - - .isComplete('loan_percent_income')
      - Valid
    - - .isNonNegative('loan_percent_income')
      - Valid
    assumptions:
    - The column 'loan_percent_income' should be complete (NOT NULL).
    - The column 'loan_percent_income' should contain non-negative values.
    - The column 'loan_percent_income' should have a mean and standard deviation constraint
      as it is a numeric column.
  loan_status:
    code:
    - - .isComplete('loan_status')
      - Valid
    - - .isContainedIn('loan_status', [0, 1])
      - Invalid
    assumptions:
    - The column 'loan_status' should be complete (NOT NULL).
    - The column 'loan_status' should only contain values 0 and 1 as it represents
      a binary status.
  person_emp_length:
    code:
    - - '.hasMean(''person_emp_length'', lambda x: x > 0)'
      - Valid
    - - '.hasStandardDeviation(''person_emp_length'', lambda x: x > 0)'
      - Valid
    - - .isComplete('person_emp_length')
      - Valid
    - - .isNonNegative('person_emp_length')
      - Valid
    assumptions:
    - The column 'person_emp_length' should be complete (NOT NULL).
    - The column 'person_emp_length' should contain non-negative values.
    - The column 'person_emp_length' should have a mean and standard deviation constraint
      as it is a numeric column.
  person_income:
    code:
    - - '.hasMean(''person_income'', lambda x: x > 0)'
      - Valid
    - - '.hasStandardDeviation(''person_income'', lambda x: x > 0)'
      - Valid
    - - .isComplete('person_income')
      - Valid
    - - .isNonNegative('person_income')
      - Valid
    assumptions:
    - The column 'person_income' should be complete (NOT NULL).
    - The column 'person_income' should contain non-negative values.
    - The column 'person_income' should have a mean and standard deviation constraint
      as it is a numeric column.
