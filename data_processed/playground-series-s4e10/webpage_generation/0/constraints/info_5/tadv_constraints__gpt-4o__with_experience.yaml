constraints:
  loan_amnt:
    code:
    - - '.hasMax(''loan_amnt'', lambda x: x < 1000000)'
      - Valid
    - - .isNonNegative('loan_amnt')
      - Valid
    assumptions:
    - loan_amnt should be non-negative.
    - loan_amnt should have reasonable values for loan amounts.
  loan_status:
    code:
    - - .isContainedIn('loan_status', [0, 1])
      - Invalid
    assumptions:
    - loan_status should be either 0 or 1.
  person_income:
    code:
    - - .isContainedIn('person_income', [0, 20000, 50000, 100000, 200000, float('inf')])
      - Invalid
    - - .isNonNegative('person_income')
      - Valid
    assumptions:
    - person_income should be non-negative.
    - 'person_income should fall into the defined income brackets: [0, 20000, 50000,
      100000, 200000, float(''inf'')].'
