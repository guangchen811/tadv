constraints:
  loan_amnt:
    code:
    - - '.hasMean(''loan_amnt'', lambda x: x > 0)'
      - Valid
    - - '.hasStandardDeviation(''loan_amnt'', lambda x: x > 0)'
      - Valid
    - - .isComplete('loan_amnt')
      - Valid
    - - .isNonNegative('loan_amnt')
      - Valid
    assumptions:
    - The column should be complete (NOT NULL)
    - The column should contain non-negative values
    - The column should have a reasonable mean and standard deviation
  loan_grade:
    code:
    - - .isComplete('loan_grade')
      - Valid
    - - .isContainedIn('loan_grade', ['A', 'B', 'C', 'D', 'E', 'F', 'G'])
      - Valid
    assumptions:
    - The column should have values within ['A', 'B', 'C', 'D', 'E', 'F', 'G']
    - The column should be complete (NOT NULL)
  loan_intent:
    code:
    - - .isComplete('loan_intent')
      - Valid
    - - .isContainedIn('loan_intent', ['EDUCATION', 'HOMEIMPROVEMENT', 'PERSONAL',
        'DEBTCONSOLIDATION', 'MEDICAL', 'VENTURE'])
      - Valid
    assumptions:
    - The column should have values within ['EDUCATION', 'HOMEIMPROVEMENT', 'PERSONAL',
      'DEBTCONSOLIDATION', 'MEDICAL', 'VENTURE']
    - The column should be complete (NOT NULL)
  person_income:
    code:
    - - '.hasMean(''person_income'', lambda x: x > 0)'
      - Valid
    - - '.hasStandardDeviation(''person_income'', lambda x: x > 0)'
      - Valid
    - - .isComplete('person_income')
      - Valid
    - - .isNonNegative('person_income')
      - Valid
    assumptions:
    - The column should be complete (NOT NULL)
    - The column should contain non-negative values
    - The column should have a reasonable mean and standard deviation
