constraints:
  cb_person_default_on_file:
    code:
    - - .isComplete('cb_person_default_on_file')
      - Valid
    - - .isContainedIn('cb_person_default_on_file', ['Y', 'N'])
      - Valid
    assumptions:
    - cb_person_default_on_file should be complete, as it is used in preprocessing
    - cb_person_default_on_file should be one of ['Y', 'N'] since it's treated as
      a categorical feature
  id:
    code:
    - - .isComplete('id')
      - Valid
    - - .isUnique('id')
      - Valid
    assumptions:
    - id should be complete, as it is used to merge predictions with test data
    - id should be unique to correctly identify each record
  loan_amnt:
    code:
    - - .isComplete('loan_amnt')
      - Valid
    - - .isNonNegative('loan_amnt')
      - Valid
    assumptions:
    - loan_amnt should be complete, as it's used to generate log_loan_amnt
    - loan_amnt should be non-negative, since log transformation is applied
  loan_grade:
    code:
    - - .isComplete('loan_grade')
      - Valid
    - - .isContainedIn('loan_grade', ['A', 'B', 'C', 'D', 'E', 'F', 'G'])
      - Valid
    assumptions:
    - loan_grade should be complete, as it is used in preprocessing
    - loan_grade should be one of ['A', 'B', 'C', 'D', 'E', 'F', 'G'] based on its
      usage in one-hot encoding
  loan_int_rate:
    code:
    - - .isComplete('loan_int_rate')
      - Valid
    - - .isNonNegative('loan_int_rate')
      - Valid
    assumptions:
    - loan_int_rate should be complete, as it is used in preprocessing
    - loan_int_rate should be non-negative, typically interest rates are non-negative
