constraints:
  Date of Admission:
    code:
    - - .isComplete('Date of Admission')
      - Valid
    - - .satisfies('to_date(`Date of Admission`, "yyyy-MM-dd") IS NOT NULL', 'Date
        of Admission should be valid date')
      - Valid
    assumptions:
    - The 'Date of Admission' column is expected to be complete and non-null.
    - The 'Date of Admission' column should be in a valid date format.
  Discharge Date:
    code:
    - - .isComplete('Discharge Date')
      - Valid
    - - .satisfies('to_date(`Discharge Date`, "yyyy-MM-dd") IS NOT NULL', 'Discharge
        Date should be valid date')
      - Valid
    assumptions:
    - The 'Discharge Date' column is expected to be complete and non-null.
    - The 'Discharge Date' column should be in a valid date format.
  Doctor:
    code:
    - - .isComplete('Doctor')
      - Valid
    assumptions:
    - The 'Doctor' column is expected to be complete and non-null.
  Hospital:
    code:
    - - .isComplete('Hospital')
      - Valid
    assumptions:
    - The 'Hospital' column is expected to be complete and non-null.
  Name:
    code:
    - - .isComplete('Name')
      - Valid
    assumptions:
    - The 'Name' column, although dropped, is expected to be complete and non-null.
  Room Number:
    code:
    - - .isComplete('Room Number')
      - Valid
    assumptions:
    - The 'Room Number' column is expected to be complete and non-null, although it
      is dropped.
  Test Results:
    code:
    - - .isContainedIn('Test Results', ['Normal', 'Abnormal', 'Inconclusive'])
      - Valid
    assumptions:
    - The 'Test Results' column is expected to be categorical with distinct values
      like 'Normal', 'Abnormal', and 'Inconclusive'.
  id:
    code:
    - - .isUnique('id')
      - Valid
    assumptions:
    - The 'id' column should have unique values since it's being used to identify
      records.
