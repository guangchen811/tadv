constraints:
  Age:
    code:
    - - .isComplete('Age')
      - Valid
    - - .isNonNegative('Age')
      - Valid
    assumptions:
    - The 'Age' should be a non-negative integer since age cannot be negative.
  Billing Amount:
    code:
    - - .isComplete('Billing Amount')
      - Valid
    - - .isNonNegative('Billing Amount')
      - Invalid
    assumptions:
    - The 'Billing Amount' should be a non-negative number since it represents a cost
      or charge.
  Blood Type:
    code:
    - - .isComplete('Blood Type')
      - Valid
    - - .isContainedIn('Blood Type', ['A+', 'O+', 'B+', 'AB+', 'A-', 'O-', 'B-', 'AB-'])
      - Valid
    assumptions:
    - 'The ''Blood Type'' should be one of the known blood types: ''A+'', ''O+'',
      ''B+'', ''AB+'', ''A-'', ''O-'', ''B-'', ''AB-''.'
  Date of Admission:
    code:
    - - .hasPattern('Date of Admission', '\\d{4}-\\d{2}-\\d{2}')
      - Valid
    - - .isComplete('Date of Admission')
      - Valid
    assumptions:
    - The 'Date of Admission' column should be convertible to a valid datetime format.
  Discharge Date:
    code:
    - - .hasPattern('Discharge Date', '\\d{4}-\\d{2}-\\d{2}')
      - Valid
    - - .isComplete('Discharge Date')
      - Valid
    - - .isGreaterThanOrEqualTo('Discharge Date', 'Date of Admission')
      - Invalid
    assumptions:
    - The 'Discharge Date' column should be convertible to a valid datetime format.
    - The 'Discharge Date' should be after or the same as 'Date of Admission' to ensure
      a non-negative length of stay.
  Medical Condition:
    code:
    - - .isComplete('Medical Condition')
      - Valid
    - - .isContainedIn('Medical Condition', ['Hypertension', 'Cancer', 'Obesity',
        'Arthritis', 'Diabetes', 'Asthma'])
      - Valid
    assumptions:
    - 'The ''Medical Condition'' should be one of the pre-defined conditions: ''Hypertension'',
      ''Cancer'', ''Obesity'', ''Arthritis'', ''Diabetes'', ''Asthma''.'
  id:
    code:
    - - .isUnique('id')
      - Valid
    assumptions:
    - The 'id' column should be unique within each dataset (train and test) since
      it is used to identify records.
